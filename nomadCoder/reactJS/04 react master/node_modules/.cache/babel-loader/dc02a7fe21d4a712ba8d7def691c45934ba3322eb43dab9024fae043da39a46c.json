{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport CompSum from \"./components/CompSum\";\nimport CompModal from \"./components/CompModal\";\n\n// let arrComp = ['1','2','3','4','5']  //문제 개수를 바꾸지 못함 state안썼으니까\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [_arrComp, _setArrComp] = useState(['1', '2', '3', '4', '5']);\n  const [_arrPoint, _setArrPoint] = useState(new Array(5).fill('x'));\n  const [_showModal, _setShowModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB354\\uD558\\uAE30\\uC5F0\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), _arrComp.map((v, idx) => /*#__PURE__*/_jsxDEV(CompSum, {\n      _setShowModal: _setShowModal,\n      idx: idx,\n      _arrPoint: _arrPoint,\n      _setArrPoint: _setArrPoint\n    }, v, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this) //배열을 리턴할때는 키를 사용한다. 최적화를 위해서 //근데 i를 주면 내가 수정을 해버리면 그게 적용이 안되고 계속해서 0부터 나오게 됨. 즉 키값이 바뀔때마다 다시 그리게 됨 //하지만 v를 넣으면 v번째잖아 그러니까 딱 걔만 지울 수가 있는거.\n    ), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [_arrPoint.filter(v => v === 'o').length, \"\\uC810\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), _showModal && /*#__PURE__*/_jsxDEV(CompModal, {\n      _setArrPoint: _setArrPoint,\n      _setShowModal: _setShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"efr0dZoS5whi0vDzedC4HaYJnA8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","CompSum","CompModal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_arrComp","_setArrComp","_arrPoint","_setArrPoint","Array","fill","_showModal","_setShowModal","children","fileName","_jsxFileName","lineNumber","columnNumber","map","v","idx","filter","length","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport CompSum from \"./components/CompSum\";\r\nimport CompModal from \"./components/CompModal\";\r\n\r\n\r\n// let arrComp = ['1','2','3','4','5']  //문제 개수를 바꾸지 못함 state안썼으니까\r\n\r\nfunction App() {\r\n\r\n  const [_arrComp, _setArrComp] = useState(['1','2','3','4','5'])\r\n  const [_arrPoint, _setArrPoint] = useState(new Array(5).fill('x'))\r\n  const [_showModal, _setShowModal] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <h1>더하기연습</h1>\r\n      {\r\n        _arrComp.map((v, idx) =>\r\n          <CompSum _setShowModal={_setShowModal} key={v} idx={idx} _arrPoint={_arrPoint} _setArrPoint={_setArrPoint} />//배열을 리턴할때는 키를 사용한다. 최적화를 위해서 //근데 i를 주면 내가 수정을 해버리면 그게 적용이 안되고 계속해서 0부터 나오게 됨. 즉 키값이 바뀔때마다 다시 그리게 됨 //하지만 v를 넣으면 v번째잖아 그러니까 딱 걔만 지울 수가 있는거.\r\n        )\r\n      }\r\n      <p>\r\n        {\r\n          _arrPoint.filter(v => v === 'o').length\r\n        }점</p>\r\n      {(_showModal) && <CompModal _setArrPoint={_setArrPoint} _setShowModal={_setShowModal} />}\r\n      {/* 형제끼리는 state공유를 못함 그래서 문제를 못바꿈. 문제를 다시 만들어주면 됨 */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,SAAS,MAAM,wBAAwB;;AAG9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAAC;EAC/D,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAIa,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;EAClE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEnD,oBACEI,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAEZZ,QAAQ,CAACa,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,kBAClBpB,OAAA,CAACH,OAAO;MAACe,aAAa,EAAEA,aAAc;MAASQ,GAAG,EAAEA,GAAI;MAACb,SAAS,EAAEA,SAAU;MAACC,YAAY,EAAEA;IAAa,GAA9DW,CAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAgE;IAAA,CAC9G,eAEHjB,OAAA;MAAAa,QAAA,GAEIN,SAAS,CAACc,MAAM,CAACF,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACG,MAAM,EACxC,QAAC;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,EACNN,UAAU,iBAAKX,OAAA,CAACF,SAAS;MAACU,YAAY,EAAEA,YAAa;MAACI,aAAa,EAAEA;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAEvF;AAEP;AAACb,EAAA,CAtBQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}