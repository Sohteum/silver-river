{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\components\\\\CompUl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport CompLi from './CompLi';\nimport { AppContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompUl = () => {\n  _s();\n  const {\n    _liCnt,\n    _setPointArr\n  } = useContext(AppContext);\n  const arr = [];\n  for (let i = 1; i <= _liCnt; i++) {\n    //리스트마다 전부 다른값이 들어가면됨\n    arr.push(i);\n  }\n  useEffect(() => {\n    console.log('-ul update');\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children:\n    //스크립트문법은 jsx안에서는 무조건 중괄호 안에쓴다.보간법.\n    arr.map((v, i) => /*#__PURE__*/_jsxDEV(CompLi, {\n      i: i\n    }, v, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 24\n    }, this)) //여기서 키값을 주면 전체가 변하지않고 엘아이의 ox리턴하는부분만 업뎃됨 키값이 변하면 \n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CompUl, \"Zkq88SAdWR1PBFn84u2kibn2ghk=\");\n_c = CompUl;\nexport default CompUl;\nvar _c;\n$RefreshReg$(_c, \"CompUl\");","map":{"version":3,"names":["React","useContext","useEffect","CompLi","AppContext","jsxDEV","_jsxDEV","CompUl","_s","_liCnt","_setPointArr","arr","i","push","console","log","children","map","v","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/components/CompUl.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport CompLi from './CompLi';\r\nimport { AppContext } from '../App';\r\n\r\n\r\nconst CompUl = () => {\r\n  const { _liCnt, _setPointArr } = useContext(AppContext)\r\n  \r\n  const arr = []\r\n  for (let i = 1; i <= _liCnt; i++) { //리스트마다 전부 다른값이 들어가면됨\r\n    arr.push(i)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('-ul update');\r\n  })\r\n  \r\n  return (\r\n    <ul>\r\n      {//스크립트문법은 jsx안에서는 무조건 중괄호 안에쓴다.보간법.\r\n        arr.map((v,i)=><CompLi i={i} key={v} />) //여기서 키값을 주면 전체가 변하지않고 엘아이의 ox리턴하는부분만 업뎃됨 키값이 변하면 \r\n      }\r\n      {}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CompUl;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC,MAAM;IAAEC;EAAa,CAAC,GAAGT,UAAU,CAACG,UAAU,CAAC;EAEvD,MAAMO,GAAG,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,MAAM,EAAEG,CAAC,EAAE,EAAE;IAAE;IAClCD,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;EACb;EAEAV,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B,CAAC,CAAC;EAEF,oBACET,OAAA;IAAAU,QAAA;IACG;IACCL,GAAG,CAACM,GAAG,CAAC,CAACC,CAAC,EAACN,CAAC,kBAAGN,OAAA,CAACH,MAAM;MAACS,CAAC,EAAEA;IAAE,GAAMM,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGxC;AAET,CAAC;AAACd,EAAA,CApBID,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAsBZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}