{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport CompResult from \"./components/CompResult\";\nimport CompUl from \"./components/CompUl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext(); //접속시에 최초 한번 갱신\n\nfunction App() {\n  _s();\n  const [_liCnt, _setLiCnt] = useState(Math.ceil(Math.random() * 3) + 1); //배열 개수를 생성하는 스테잇을 만들고야 배열의 개수는 랜덤.근데 다음에 화면 업데이트해도 안읽으니까 여기서 랜덤으로 만들면 안됨. 초기화를 안하고 바뀐상태만 기억함. 그래서 셋리카운트를 해줄때까지는 안변하고 아님 새로고침을 해줘야하는것. //업뎃될때는 안되는데 랜덤이니까 안보였다가 다시 새로 태어날때, 키값이 바뀔때, 그때는 달라진다.\n  const [_ulKey, _setUlKey] = useState(1);\n  const [_pointArr, _setPointArr] = useState(1); //배열로 만들어야하니까. arr\n\n  useEffect(() => {\n    console.log('App update'); //정답일때만 업데이트가 일어난다 왜냐면 스테이트가 그때만 변경되잖아\n  });\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      //밖은 보간법중괄호, 안은 변수(객체)중괄호\n      _liCnt,\n      _setLiCnt,\n      _pointArr,\n      _setPointArr\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB354\\uD558\\uAE30 \\uBB38\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompUl, {}, _ulKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompResult, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        _setUlKey(prev => prev * -1);\n      },\n      children: \"\\uCD08\\uAE30\\uD654\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m35ENo0EvWKeltlu1LmcaEZmGYs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","CompResult","CompUl","jsxDEV","_jsxDEV","AppContext","App","_s","_liCnt","_setLiCnt","Math","ceil","random","_ulKey","_setUlKey","_pointArr","_setPointArr","console","log","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prev","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/App.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport CompResult from \"./components/CompResult\";\r\nimport CompUl from \"./components/CompUl\";\r\n\r\nexport const AppContext = createContext()  //접속시에 최초 한번 갱신\r\n\r\nfunction App() {\r\n  const [_liCnt, _setLiCnt] = useState(Math.ceil(Math.random() * 3) + 1)  //배열 개수를 생성하는 스테잇을 만들고야 배열의 개수는 랜덤.근데 다음에 화면 업데이트해도 안읽으니까 여기서 랜덤으로 만들면 안됨. 초기화를 안하고 바뀐상태만 기억함. 그래서 셋리카운트를 해줄때까지는 안변하고 아님 새로고침을 해줘야하는것. //업뎃될때는 안되는데 랜덤이니까 안보였다가 다시 새로 태어날때, 키값이 바뀔때, 그때는 달라진다.\r\n  const [_ulKey, _setUlKey] = useState(1)\r\n  const [_pointArr, _setPointArr] = useState(1)//배열로 만들어야하니까. arr\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('App update');//정답일때만 업데이트가 일어난다 왜냐면 스테이트가 그때만 변경되잖아\r\n  })\r\n\r\n  return (\r\n    <AppContext.Provider value={{ //밖은 보간법중괄호, 안은 변수(객체)중괄호\r\n      _liCnt, _setLiCnt, \r\n      _pointArr, _setPointArr\r\n    }}>\r\n      <h1>더하기 문제</h1>\r\n      <CompUl key={_ulKey} />{/* //키를 계속 바꿔야 새로 태어나니까 스테잇으로 만들어버림 */}\r\n      <hr />\r\n      <CompResult />\r\n      <button onClick={()=>{_setUlKey(prev => prev* -1)}}>초기화</button>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,OAAO,MAAMC,UAAU,gBAAGR,aAAa,EAAE,EAAE;;AAE3C,SAASS,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACU,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;EACxE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;;EAG7CD,SAAS,CAAC,MAAM;IACdkB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,CAAC;EAC5B,CAAC,CAAC;;EAEF,oBACEd,OAAA,CAACC,UAAU,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAE;MAC5BZ,MAAM;MAAEC,SAAS;MACjBM,SAAS;MAAEC;IACb,CAAE;IAAAK,QAAA,gBACAjB,OAAA;MAAAiB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACfrB,OAAA,CAACF,MAAM,MAAMW,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACvBrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNrB,OAAA,CAACH,UAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACdrB,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAI;QAACZ,SAAS,CAACa,IAAI,IAAIA,IAAI,GAAE,CAAC,CAAC,CAAC;MAAA,CAAE;MAAAN,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5C;AAE1B;AAAClB,EAAA,CAtBQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}