{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\components\\\\CompLi.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fnGetRandom = () => Math.floor(Math.random() * 10);\nconst CompLi = () => {\n  _s();\n  const {\n    _pointArr,\n    _setPointArr\n  } = useContext(AppContext);\n  const [_num1, _setNum1] = useState(fnGetRandom());\n  const [_num2, _setNum2] = useState(fnGetRandom());\n  function fnOnInputHandler(e) {\n    let pointArr = [..._pointArr];\n    _setPointArr(arr)(_num1 + _num2 === parseInt(e.target.value)) ? 'o' : 'x'; //이 값을 해당배열의 해당번째 애가 받는것\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: _num1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), \"+\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: _num2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \"=\", /*#__PURE__*/_jsxDEV(\"input\", {\n      onInput: fnOnInputHandler,\n      type: \"number\",\n      min: \"0\",\n      max: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(CompLi, \"n+OjzwQmoUI4zgoloycHY7FtVu8=\");\n_c = CompLi;\nexport default CompLi;\nvar _c;\n$RefreshReg$(_c, \"CompLi\");","map":{"version":3,"names":["React","useContext","useState","AppContext","jsxDEV","_jsxDEV","fnGetRandom","Math","floor","random","CompLi","_s","_pointArr","_setPointArr","_num1","_setNum1","_num2","_setNum2","fnOnInputHandler","e","pointArr","arr","parseInt","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onInput","type","min","max","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/components/CompLi.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { AppContext } from '../App';\r\n\r\nconst fnGetRandom =() => Math.floor(Math.random()*10)\r\n\r\nconst CompLi = () => {\r\n  const {_pointArr, _setPointArr}= useContext(AppContext)\r\n\r\n const [_num1, _setNum1] = useState(fnGetRandom())\r\n const [_num2, _setNum2] = useState(fnGetRandom())\r\n\r\nfunction fnOnInputHandler(e) {\r\n  let pointArr = [..._pointArr]\r\n  _setPointArr(arr)\r\n  (_num1+_num2===parseInt(e.target.value))? 'o':'x' //이 값을 해당배열의 해당번째 애가 받는것\r\n}\r\n\r\n\r\n  return (\r\n    <li>\r\n      <span>{_num1}</span>\r\n      +\r\n      <span>{_num2}</span>\r\n      =\r\n      <input onInput={fnOnInputHandler} type=\"number\" min=\"0\" max=\"9\"/>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CompLi;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAEA,CAAA,KAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,EAAE,CAAC;AAErD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAACC,SAAS;IAAEC;EAAY,CAAC,GAAEZ,UAAU,CAACE,UAAU,CAAC;EAExD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACI,WAAW,EAAE,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACI,WAAW,EAAE,CAAC;EAElD,SAASY,gBAAgBA,CAACC,CAAC,EAAE;IAC3B,IAAIC,QAAQ,GAAG,CAAC,GAAGR,SAAS,CAAC;IAC7BC,YAAY,CAACQ,GAAG,CAAC,CAChBP,KAAK,GAACE,KAAK,KAAGM,QAAQ,CAACH,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC,GAAE,GAAG,GAAC,GAAG,EAAC;EACpD;;EAGE,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAOX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,KAEpB,eAAAxB,OAAA;MAAAoB,QAAA,EAAOT;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,KAEpB,eAAAxB,OAAA;MAAOyB,OAAO,EAAEZ,gBAAiB;MAACa,IAAI,EAAC,QAAQ;MAACC,GAAG,EAAC,GAAG;MAACC,GAAG,EAAC;IAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9D;AAET,CAAC;AAAClB,EAAA,CAtBID,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AAwBZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}