{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const day = new Date()\n  // day.getTime()\n  let timeStamp = Date.now(); //1000곱한 시간이 지금까지 흐른 초, 실시간으로 구해야함(업데이트되어야함, 그래서 셋인터벌)\n  //내가 만약 미래 특정시간(바뀌지 않는 시간)을 구하고 싶으면 미래시간 - 지금시간을 빼면 됨.\n  const dDayTimeStamp = new Date(2023, 4, 26).getTime(); //이렇게 만들면 현재 날짜 아니면 안에 날짜를 넣어줘야 디데이가 됨\n  console.log(dDayTimeStamp);\n  useEffect(() => {\n    let intervalID = setInterval(() => {\n      timeStamp = Date.now();\n      console.log(timeStamp);\n    }, 1000); //항상 습관적으로 클리어 할것\n    return () => {\n      clearInterval(intervalID);\n    };\n  }, []);\n  console.log(timeStamp);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"app\"\n  }, void 0, false);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","timeStamp","Date","now","dDayTimeStamp","getTime","console","log","intervalID","setInterval","clearInterval","children","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  // const day = new Date()\r\n  // day.getTime()\r\n  let timeStamp = Date.now()//1000곱한 시간이 지금까지 흐른 초, 실시간으로 구해야함(업데이트되어야함, 그래서 셋인터벌)\r\n  //내가 만약 미래 특정시간(바뀌지 않는 시간)을 구하고 싶으면 미래시간 - 지금시간을 빼면 됨.\r\n  const dDayTimeStamp = new Date(2023,4,26).getTime() //이렇게 만들면 현재 날짜 아니면 안에 날짜를 넣어줘야 디데이가 됨\r\n  console.log(dDayTimeStamp);\r\n\r\n  useEffect(() => {\r\n    let intervalID = setInterval(() => {\r\n      timeStamp = Date.now()\r\n      console.log(timeStamp);\r\n    }, 1000)//항상 습관적으로 클리어 할것\r\n    return (() => {\r\n      clearInterval(intervalID)\r\n    })\r\n  }, [])\r\n  console.log(timeStamp);\r\n  return (\r\n    <>\r\n      app\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;EAC1B;EACA,MAAMC,aAAa,GAAG,IAAIF,IAAI,CAAC,IAAI,EAAC,CAAC,EAAC,EAAE,CAAC,CAACG,OAAO,EAAE,EAAC;EACpDC,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;EAE1BV,SAAS,CAAC,MAAM;IACd,IAAIc,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCR,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;MACtBG,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC;IACR,OAAQ,MAAM;MACZS,aAAa,CAACF,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACNF,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;EACtB,oBACEH,OAAA,CAAAF,SAAA;IAAAe,QAAA,EAAE;EAEF,iBAAG;AAEP;AAACX,EAAA,CAvBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}