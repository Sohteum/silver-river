{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\components\\\\CompSumLi.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fnGetRandom = () => Math.floor(Math.random() * 10);\nconst CompSumLi = _ref => {\n  _s();\n  let {\n    _point,\n    idx,\n    _setPoint,\n    _setShowModal,\n    _setShowUl\n  } = _ref;\n  const [_num1, _setNum1] = useState(fnGetRandom());\n  const [_num2, _setNum2] = useState(fnGetRandom());\n  function fnInputHandler(e) {\n    let arr = [..._point];\n    arr[idx] = parseInt(e.target.value) === _num1 + _num2 ? 'o' : 'x';\n    _setPoint(arr); //이건 다음에 화면을 이렇게 바꾸겠다는거. \n    //console.log(_point);//_point는 못쓰고, setpoint는 한박자가 느려서 arr로 해야됨.\n    _setShowModal(arr.filter(v => v === 'o').length === 3 && true); //state는 복제, 출력, 바인딩할때만 씀 왜냐면 한단계 느리게 갱신되니까\n    _setShowModal(arr.filter(v => v === 'o').length === 3 || true); //1이랑 2일대 보여주고 3이되면 숨긴다는 뜻. 그러니까 3이 아ㅇ니라면 트루를 내뱉는다. \n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: [idx, \") \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: _num1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), \"+\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: _num2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), \"=\", /*#__PURE__*/_jsxDEV(\"input\", {\n      onInput: fnInputHandler,\n      type: \"number\",\n      min: \"0\",\n      max: \"20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(CompSumLi, \"xp2ZtbnJfabSmRnArfn1IqaKTbg=\");\n_c = CompSumLi;\nexport default CompSumLi;\nvar _c;\n$RefreshReg$(_c, \"CompSumLi\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","fnGetRandom","Math","floor","random","CompSumLi","_ref","_s","_point","idx","_setPoint","_setShowModal","_setShowUl","_num1","_setNum1","_num2","_setNum2","fnInputHandler","e","arr","parseInt","target","value","filter","v","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onInput","type","min","max","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/components/CompSumLi.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst fnGetRandom = () => Math.floor(Math.random() * 10)\r\n\r\nconst CompSumLi = ({ _point, idx, _setPoint, _setShowModal, _setShowUl }) => {\r\n\r\n  const [_num1, _setNum1] = useState(fnGetRandom())\r\n  const [_num2, _setNum2] = useState(fnGetRandom())\r\n\r\n  function fnInputHandler(e) {\r\n    let arr = [..._point]\r\n    arr[idx] = (parseInt(e.target.value) === _num1 + _num2) ? 'o' : 'x'\r\n    _setPoint(arr)//이건 다음에 화면을 이렇게 바꾸겠다는거. \r\n   //console.log(_point);//_point는 못쓰고, setpoint는 한박자가 느려서 arr로 해야됨.\r\n    _setShowModal((arr.filter(v=> v==='o').length===3)&&true ) //state는 복제, 출력, 바인딩할때만 씀 왜냐면 한단계 느리게 갱신되니까\r\n    _setShowModal((arr.filter(v=> v==='o').length===3)|| true ) //1이랑 2일대 보여주고 3이되면 숨긴다는 뜻. 그러니까 3이 아ㅇ니라면 트루를 내뱉는다. \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <b>{idx}) </b>\r\n      <span>{_num1}</span>\r\n      +\r\n      <span>{_num2}</span>\r\n      =\r\n      <input onInput={fnInputHandler} type=\"number\" min=\"0\" max=\"20\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompSumLi;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC;AAExD,MAAMC,SAAS,GAAGC,IAAA,IAA2D;EAAAC,EAAA;EAAA,IAA1D;IAAEC,MAAM;IAAEC,GAAG;IAAEC,SAAS;IAAEC,aAAa;IAAEC;EAAW,CAAC,GAAAN,IAAA;EAEtE,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAACG,WAAW,EAAE,CAAC;EACjD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAACG,WAAW,EAAE,CAAC;EAEjD,SAASgB,cAAcA,CAACC,CAAC,EAAE;IACzB,IAAIC,GAAG,GAAG,CAAC,GAAGX,MAAM,CAAC;IACrBW,GAAG,CAACV,GAAG,CAAC,GAAIW,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,KAAKT,KAAK,GAAGE,KAAK,GAAI,GAAG,GAAG,GAAG;IACnEL,SAAS,CAACS,GAAG,CAAC;IACf;IACCR,aAAa,CAAEQ,GAAG,CAACI,MAAM,CAACC,CAAC,IAAGA,CAAC,KAAG,GAAG,CAAC,CAACC,MAAM,KAAG,CAAC,IAAG,IAAI,CAAE,EAAC;IAC3Dd,aAAa,CAAEQ,GAAG,CAACI,MAAM,CAACC,CAAC,IAAGA,CAAC,KAAG,GAAG,CAAC,CAACC,MAAM,KAAG,CAAC,IAAI,IAAI,CAAE,EAAC;EAC9D;;EAEA,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,GAAIjB,GAAG,EAAC,IAAE;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACd9B,OAAA;MAAA0B,QAAA,EAAOb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,KAEpB,eAAA9B,OAAA;MAAA0B,QAAA,EAAOX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,KAEpB,eAAA9B,OAAA;MAAO+B,OAAO,EAAEd,cAAe;MAACe,IAAI,EAAC,QAAQ;MAACC,GAAG,EAAC,GAAG;MAACC,GAAG,EAAC;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC7D;AAEV,CAAC;AAACvB,EAAA,CAxBIF,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}