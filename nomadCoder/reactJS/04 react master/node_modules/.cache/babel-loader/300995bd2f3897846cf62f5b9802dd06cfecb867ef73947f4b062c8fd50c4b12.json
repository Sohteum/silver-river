{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\components\\\\CompLi.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fnGetRandom = () => Math.floor(Math.random() * 10); //만약에 임폴트 익스폴트를 하면 공유는 할 수 있음\n\nconst CompLi = () => {\n  _s();\n  const {\n    _pointArr,\n    _setPointArr\n  } = useContext(AppContext);\n  const [_num1, _setNum1] = useState(fnGetRandom());\n  const [_num2, _setNum2] = useState(fnGetRandom()); //부모걸 갖다쓰면 같은 문제가 나오니까 여기서 스테잇 하는거.\n  const [_ox, _setOX] = useState('x'); //스테이트!!!\n\n  function fnInputHandler(e) {\n    let userNum = parseInt(e.target.value);\n    let pointArr = [..._pointArr];\n    if (userNum === _num1 + _num2) {\n      //해당 문제가 정답일경우\n      _setOX('o');\n      pointArr[i] = 'o';\n    } else {\n      //해당 문제가 오답일경우\n      _setOX('x');\n      pointArr[i] = 'x';\n    }\n    _setPointArr(pointArr);\n  }\n  useEffect(() => {\n    console.log('---li update');\n  });\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: _num1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \"+\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: _num2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), \"=\", /*#__PURE__*/_jsxDEV(\"input\", {\n      onInput: fnInputHandler,\n      type: \"number\",\n      min: \"0\",\n      max: \"18\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: _ox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CompLi, \"96eYPNtSsd3p33rfbj2loxTWGXI=\");\n_c = CompLi;\nexport default CompLi;\nvar _c;\n$RefreshReg$(_c, \"CompLi\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AppContext","jsxDEV","_jsxDEV","fnGetRandom","Math","floor","random","CompLi","_s","_pointArr","_setPointArr","_num1","_setNum1","_num2","_setNum2","_ox","_setOX","fnInputHandler","e","userNum","parseInt","target","value","pointArr","i","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onInput","type","min","max","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/components/CompLi.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { AppContext } from '../App';\r\n\r\nconst fnGetRandom = () => Math.floor(Math.random() * 10)//만약에 임폴트 익스폴트를 하면 공유는 할 수 있음\r\n\r\nconst CompLi = () => {\r\n\r\n  const { _pointArr, _setPointArr } = useContext(AppContext)\r\n  const [_num1, _setNum1] = useState(fnGetRandom())\r\n  const [_num2, _setNum2] = useState(fnGetRandom()) //부모걸 갖다쓰면 같은 문제가 나오니까 여기서 스테잇 하는거.\r\n  const [_ox, _setOX] = useState('x') //스테이트!!!\r\n\r\n  function fnInputHandler(e) {\r\n    let userNum = parseInt(e.target.value)\r\n    let pointArr = [..._pointArr]\r\n    if (userNum === _num1 + _num2) {//해당 문제가 정답일경우\r\n      _setOX('o')\r\n      pointArr[i] = 'o'\r\n    } else {//해당 문제가 오답일경우\r\n      _setOX('x')\r\n      pointArr[i] = 'x'\r\n    }\r\n    _setPointArr(pointArr)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('---li update');\r\n  })\r\n\r\n  return (\r\n    <li>\r\n      <span>{_num1}</span>\r\n      +\r\n      <span>{_num2}</span>\r\n      =\r\n      <input onInput={fnInputHandler} type=\"number\" min=\"0\" max=\"18\" />\r\n      &nbsp;\r\n      <b>{_ox}</b>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CompLi;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAGA,CAAA,KAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC;;AAExD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGb,UAAU,CAACG,UAAU,CAAC;EAC1D,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACI,WAAW,EAAE,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACI,WAAW,EAAE,CAAC,EAAC;EAClD,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGjB,QAAQ,CAAC,GAAG,CAAC,EAAC;;EAEpC,SAASkB,cAAcA,CAACC,CAAC,EAAE;IACzB,IAAIC,OAAO,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IACtC,IAAIC,QAAQ,GAAG,CAAC,GAAGd,SAAS,CAAC;IAC7B,IAAIU,OAAO,KAAKR,KAAK,GAAGE,KAAK,EAAE;MAAC;MAC9BG,MAAM,CAAC,GAAG,CAAC;MACXO,QAAQ,CAACC,CAAC,CAAC,GAAG,GAAG;IACnB,CAAC,MAAM;MAAC;MACNR,MAAM,CAAC,GAAG,CAAC;MACXO,QAAQ,CAACC,CAAC,CAAC,GAAG,GAAG;IACnB;IACAd,YAAY,CAACa,QAAQ,CAAC;EACxB;EAEAzB,SAAS,CAAC,MAAM;IACd2B,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC7B,CAAC,CAAC;EAEF,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAOhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,KAEpB,eAAA7B,OAAA;MAAAyB,QAAA,EAAOd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,KAEpB,eAAA7B,OAAA;MAAO8B,OAAO,EAAEf,cAAe;MAACgB,IAAI,EAAC,QAAQ;MAACC,GAAG,EAAC,GAAG;MAACC,GAAG,EAAC;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,QAEjE,eAAA7B,OAAA;MAAAyB,QAAA,EAAIZ;IAAG;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACT;AAET,CAAC;AAACvB,EAAA,CAnCID,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAqCZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}