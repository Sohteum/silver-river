{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sosomi\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport CompBtn from \"./CompBtn\";\nimport CompDiv from \"./CompDiv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  const [_listArr, _setListArr] = useState([]); //div 반복출력할려고 만든거야 listArr//배열이 늘어날때 div가 늘어나게하고파\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      _listArr,\n      _setListArr\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uBC84\\uD2BC\\uC744 \\uD074\\uB9AD\\uD560\\uB54C\\uB9C8\\uB2E4 div\\uAC00 \\uCD94\\uAC00\\uB429\\uB2C8\\uB2E4. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 32\n      }, this), \"div\\uC758 \\uD0A4\\uAC12\\uC73C\\uB85C\\uB294 timeStamp\\uB97C \\uC0AC\\uC6A9\\uD558\\uC138\\uC694 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 37\n      }, this), \"\\uBE0C\\uB77C\\uC6B0\\uC800\\uB97C \\uC885\\uB8CC\\uD6C4 \\uB2E4\\uC2DC \\uC2E4\\uD589\\uD560 \\uACBD\\uC6B0 div\\uC758 \\uC22B\\uC790\\uB294 \\uC774\\uC804\\uACFC \\uB3D9\\uC77C\\uD558\\uAC8C \\uCD9C\\uB825\\uB418\\uC5B4\\uC57C \\uD569\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), _listArr.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uBAA9\\uB85D\\uC774 \\uC5C6\\uC5B4\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : _listArr.map(v => /*#__PURE__*/_jsxDEV(CompDiv, {}, v.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 27\n    }, this))\n    /*  [<CompDiv />,<CompDiv />] */\n    , \" \", /*#__PURE__*/_jsxDEV(CompBtn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ObyDl3EOXBn01nVydtEp9B5dKuw=\");\n\n_c = App;\nexport default App; //버튼을 눌렀을때 추가하는거 먼저 배열이 있어야함...map.... 처음에는 하나 배열을 넣음. 그다음 2번째 인덱스 타임스탬프. 클릭할때마다 배열의 값이 추가가되는데 그걸 타임스템프를 밀어넣어서 추가할것. 그걸 키값으로 사용하고 해당 컴포넌트에서 추가한 날짜...\n//타입스템프로 키값..\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createContext","useState","CompBtn","CompDiv","AppContext","App","_listArr","_setListArr","length","map","v","key"],"sources":["C:/Users/sosomi/OneDrive/문서/GitHub/pwa_class/05react/react-app/src/App.js"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport CompBtn from \"./CompBtn\";\nimport CompDiv from \"./CompDiv\";\n\nexport const AppContext =  createContext()\n\nfunction App() {\n  const [_listArr, _setListArr] = useState([]) //div 반복출력할려고 만든거야 listArr//배열이 늘어날때 div가 늘어나게하고파\n\n\n\n  return (\n    <AppContext.Provider value={{_listArr, _setListArr}}>\n      <p>\n        버튼을 클릭할때마다 div가 추가됩니다. <br />\n        div의 키값으로는 timeStamp를 사용하세요 <br />\n        브라우저를 종료후 다시 실행할 경우 div의 숫자는 이전과 동일하게 출력되어야 합니다.\n      </p>\n      <hr />\n      {_listArr.length === 0 ?\n        <p>목록이 없어요</p>\n        :\n        _listArr.map(v => <CompDiv key={v.key} />)\n        /*  [<CompDiv />,<CompDiv />] */\n      } {/* 배열의 길이만큼 새로운 배열(배열이 필요하니까. 근데 리턴문안에서는 1개밖에 리턴못하자나 그니까 배열로 리턴해야지)을 만들겠다 */}\n      <CompBtn  />\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n\n//버튼을 눌렀을때 추가하는거 먼저 배열이 있어야함...map.... 처음에는 하나 배열을 넣음. 그다음 2번째 인덱스 타임스탬프. 클릭할때마다 배열의 값이 추가가되는데 그걸 타임스템프를 밀어넣어서 추가할것. 그걸 키값으로 사용하고 해당 컴포넌트에서 추가한 날짜...\n//타입스템프로 키값..\n\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,OAAO,MAAMC,UAAU,gBAAIJ,aAAa,EAAjC;;AAEP,SAASK,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC,CADa,CACgC;;EAI7C,oBACE,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAE;MAACK,QAAD;MAAWC;IAAX,CAA5B;IAAA,wBACE;MAAA,8HACyB;QAAA;QAAA;QAAA;MAAA,QADzB,2GAE8B;QAAA;QAAA;QAAA;MAAA,QAF9B;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAA;MAAA;MAAA;IAAA,QANF,EAOGD,QAAQ,CAACE,MAAT,KAAoB,CAApB,gBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,GAGCF,QAAQ,CAACG,GAAT,CAAaC,CAAC,iBAAI,QAAC,OAAD,MAAcA,CAAC,CAACC,GAAhB;MAAA;MAAA;MAAA;IAAA,QAAlB;IACA;IAXJ,oBAaE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GAtBQN,G;;KAAAA,G;AAwBT,eAAeA,GAAf,C,CAEA;AACA"},"metadata":{},"sourceType":"module"}