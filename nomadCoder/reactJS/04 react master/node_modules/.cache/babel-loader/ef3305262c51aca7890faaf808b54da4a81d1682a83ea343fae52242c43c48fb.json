{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport CompTitle from \"./CompTitle\";\nimport CompOutput from \"./CompOutput\";\nimport CompBtn from \"./CompBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconsole.log(`app outside`);\nfunction App() {\n  _s();\n  console.log(`app inside  업데이트 시작`);\n  const [_n, _setN] = useState(0); //n이 변경이 되면 app은 여기서부터 새로 그리는것. 바깥쪽을 새로그리지는 않는다.그래서 로그를 찍어보면 처음에는 둘다나오는데 클릭하면 사용하는애인 앱인 inside만 나옴. 즉 스테잇이 변경되면 랜더링이 일어난다. 인사이드만, 아웃사이드는 안일어나\n  //콘솔로그로 값을 알아보는건 좋은 방법은 아님\n\n  useEffect(() => {\n    console.log(`app inside  업데이트 완료`); // 가상돔이 만들어지는 순간\n    document.querySelector('.btn').addEventListener(`click`, e => {\n      alert('tt'); //업데이트 될때마다 alert를 하라는 의미. 그래서 버튼을 눌러서 숫자를 늘리면 그 숫자만큼 경고창이 계속 나옴\n    });\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CompTitle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompOutput, {\n      _n: _n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompBtn, {\n      _setN: _setN\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      children: \"\\uACBD\\uACE0\\uCC3D\\uB744\\uC6B0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"itRZFz41XKuD0rs/IDknD2EGdvQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","CompTitle","CompOutput","CompBtn","jsxDEV","_jsxDEV","Fragment","_Fragment","console","log","App","_s","_n","_setN","document","querySelector","addEventListener","e","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport CompTitle from \"./CompTitle\";\r\nimport CompOutput from \"./CompOutput\";\r\nimport CompBtn from \"./CompBtn\";\r\n\r\nconsole.log(`app outside`);\r\n\r\nfunction App() {\r\n\r\n  console.log(`app inside  업데이트 시작`);\r\n\r\n  const [_n, _setN] = useState(0)//n이 변경이 되면 app은 여기서부터 새로 그리는것. 바깥쪽을 새로그리지는 않는다.그래서 로그를 찍어보면 처음에는 둘다나오는데 클릭하면 사용하는애인 앱인 inside만 나옴. 즉 스테잇이 변경되면 랜더링이 일어난다. 인사이드만, 아웃사이드는 안일어나\r\n  //콘솔로그로 값을 알아보는건 좋은 방법은 아님\r\n\r\n  useEffect(() => {\r\n    console.log(`app inside  업데이트 완료`);// 가상돔이 만들어지는 순간\r\n    document.querySelector('.btn').addEventListener(`click`, e => {\r\n      alert('tt') //업데이트 될때마다 alert를 하라는 의미. 그래서 버튼을 눌러서 숫자를 늘리면 그 숫자만큼 경고창이 계속 나옴\r\n    })\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <CompTitle />\r\n      <CompOutput _n={_n} />\r\n      <CompBtn _setN={_setN} />\r\n      <button className=\"btn\">경고창띄우기</button>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhCC,OAAO,CAACC,GAAG,CAAE,aAAY,CAAC;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEbH,OAAO,CAACC,GAAG,CAAE,qBAAoB,CAAC;EAElC,MAAM,CAACG,EAAE,EAAEC,KAAK,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC/B;;EAEAD,SAAS,CAAC,MAAM;IACdS,OAAO,CAACC,GAAG,CAAE,qBAAoB,CAAC,CAAC;IACnCK,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACC,gBAAgB,CAAE,OAAM,EAAEC,CAAC,IAAI;MAC5DC,KAAK,CAAC,IAAI,CAAC,EAAC;IACd,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACJ,SAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACblB,OAAA,CAACH,UAAU;MAACU,EAAE,EAAEA;IAAG;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtBlB,OAAA,CAACF,OAAO;MAACU,KAAK,EAAEA;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACzBlB,OAAA;MAAQmB,SAAS,EAAC,KAAK;MAAAL,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAEtC;AAEP;AAACZ,EAAA,CAvBQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}