{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\components\\\\CompSum.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fnSetRandom = () => Math.floor(Math.random() * 10);\nconst CompSum = _ref => {\n  _s();\n  let {\n    _setPointArr,\n    _pointArr,\n    idx\n  } = _ref;\n  const [_num1, _setNum1] = useState(fnSetRandom());\n  const [_num2, _setnum2] = useState(fnSetRandom());\n  const fnInputHandler = function (e) {\n    let userNum = parseInt(e.target.value);\n    let pointArr = [..._pointArr];\n    if (_num1 + _num2 === userNum) {\n      //정답을 기록할 배열>전개연산자를 활용해서 다른배열로 만들어야함 \n      pointArr[idx] = '정답';\n    } else {\n      pointArr[idx] = '오답';\n    }\n    _setPointArr(pointArr);\n    console.log(pointArr);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", _num1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), \"+\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: _num2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \"=\", /*#__PURE__*/_jsxDEV(\"input\", {\n      onInput: fnInputHandler,\n      type: \"number\",\n      min: \"0\",\n      max: \"20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CompSum, \"6H6n5upbQuLpk5hDhvM9/6jHKCA=\");\n_c = CompSum;\nexport default CompSum;\nvar _c;\n$RefreshReg$(_c, \"CompSum\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","fnSetRandom","Math","floor","random","CompSum","_ref","_s","_setPointArr","_pointArr","idx","_num1","_setNum1","_num2","_setnum2","fnInputHandler","e","userNum","parseInt","target","value","pointArr","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onInput","type","min","max","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/components/CompSum.jsx"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\nconst fnSetRandom = () => Math.floor(Math.random() * 10)\r\n\r\n\r\n\r\nconst CompSum = ({ _setPointArr, _pointArr, idx }) => {\r\n\r\n  const [_num1, _setNum1] = useState(fnSetRandom())\r\n  const [_num2, _setnum2] = useState(fnSetRandom())\r\n\r\n  const fnInputHandler = function (e) {\r\n    let userNum = parseInt(e.target.value)\r\n    let pointArr = [..._pointArr]\r\n\r\n    if (_num1 + _num2 === userNum) {\r\n      //정답을 기록할 배열>전개연산자를 활용해서 다른배열로 만들어야함 \r\n      pointArr[idx] = '정답'\r\n    } else {\r\n      pointArr[idx] = '오답'\r\n    }\r\n    _setPointArr(pointArr)\r\n    console.log(pointArr);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <span> {_num1}</span>\r\n      +\r\n      <span >{_num2}</span>\r\n      =\r\n      <input onInput={fnInputHandler} type=\"number\" min=\"0\" max=\"20\" />\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompSum;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC;AAIxD,MAAMC,OAAO,GAAGC,IAAA,IAAsC;EAAAC,EAAA;EAAA,IAArC;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAI,CAAC,GAAAJ,IAAA;EAE/C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACG,WAAW,EAAE,CAAC;EACjD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAACG,WAAW,EAAE,CAAC;EAEjD,MAAMc,cAAc,GAAG,SAAAA,CAAUC,CAAC,EAAE;IAClC,IAAIC,OAAO,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IACtC,IAAIC,QAAQ,GAAG,CAAC,GAAGZ,SAAS,CAAC;IAE7B,IAAIE,KAAK,GAAGE,KAAK,KAAKI,OAAO,EAAE;MAC7B;MACAI,QAAQ,CAACX,GAAG,CAAC,GAAG,IAAI;IACtB,CAAC,MAAM;MACLW,QAAQ,CAACX,GAAG,CAAC,GAAG,IAAI;IACtB;IACAF,YAAY,CAACa,QAAQ,CAAC;IACtBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACvB,CAAC;EAED,oBACErB,OAAA;IAAAwB,QAAA,gBAEExB,OAAA;MAAAwB,QAAA,GAAM,GAAC,EAACb,KAAK;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,KAErB,eAAA5B,OAAA;MAAAwB,QAAA,EAAQX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,KAErB,eAAA5B,OAAA;MAAO6B,OAAO,EAAEd,cAAe;MAACe,IAAI,EAAC,QAAQ;MAACC,GAAG,EAAC,GAAG;MAACC,GAAG,EAAC;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACjE5B,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACrB,EAAA,CA9BIF,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}