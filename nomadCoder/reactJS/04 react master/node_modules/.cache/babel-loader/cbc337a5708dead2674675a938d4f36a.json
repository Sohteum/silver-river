{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fnGetArr = () => {\n  const arrStrg = localStorage.getItem('arrStorage');\n\n  if (arrStrg) {\n    return JSON.parse(arrStrg);\n  } else {\n    localStorage.setItem('arrStorage', JSON.stringify([1]));\n    return [1];\n  }\n}; //fn\n// 로컬스토리지에 값이 있으면 가져오고 없으면 1의 값을 리턴하는 함수를 만든다\n// 스테이트를 직접작성하는게 아니면 밖에서 만들어야한다\n\n\nfunction App() {\n  _s();\n\n  const [_add, _setAdd] = useState(1);\n\n  const fnAdd = function () {\n    const i = _arr[_arr.length - 1] + 1;\n    const arr = [..._arr, i];\n    window.localStorage.setItem('arrStorage', JSON.stringify(arr));\n\n    _setArr(arr);\n\n    _setAdd(arr);\n  };\n\n  const fnIncreaseHandler = () => {\n    _setAdd(prev => prev + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [_add, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fnIncreaseHandler,\n      children: \"\\uC99D\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"7ckdFvLkHC6USLjmEWlwO3+SaD4=\");\n\n_c = App;\nexport default App; //브라우저 끄고 증가가 남아있어야함\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","fnGetArr","arrStrg","localStorage","getItem","JSON","parse","setItem","stringify","App","_add","_setAdd","fnAdd","i","_arr","length","arr","window","_setArr","fnIncreaseHandler","prev"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst fnGetArr = () => {\r\n  const arrStrg = localStorage.getItem('arrStorage')\r\n  if(arrStrg) {\r\n    return JSON.parse(arrStrg)\r\n  }else {\r\n    localStorage.setItem( 'arrStorage',JSON.stringify([1]) )\r\n    return [1]\r\n  }\r\n}//fn\r\n// 로컬스토리지에 값이 있으면 가져오고 없으면 1의 값을 리턴하는 함수를 만든다\r\n// 스테이트를 직접작성하는게 아니면 밖에서 만들어야한다\r\n\r\nfunction App() {\r\n  const [_add, _setAdd] = useState(1)\r\n\r\n  const fnAdd = function(){\r\n    const i = _arr[_arr.length-1]+1\r\n    const arr = [..._arr,i]\r\n    window.localStorage.setItem('arrStorage',JSON.stringify(arr))\r\n    _setArr(arr)\r\n    _setAdd(arr)\r\n  }\r\n\r\n  const fnIncreaseHandler = () => {\r\n    _setAdd(prev => prev + 1)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {_add}\r\n      <hr />\r\n      <button onClick={fnIncreaseHandler}>증가</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//브라우저 끄고 증가가 남아있어야함"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EACrB,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAhB;;EACA,IAAGF,OAAH,EAAY;IACV,OAAOG,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAP;EACD,CAFD,MAEM;IACJC,YAAY,CAACI,OAAb,CAAsB,YAAtB,EAAmCF,IAAI,CAACG,SAAL,CAAe,CAAC,CAAD,CAAf,CAAnC;IACA,OAAO,CAAC,CAAD,CAAP;EACD;AACF,CARD,C,CAQC;AACD;AACA;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;;EAEA,MAAMY,KAAK,GAAG,YAAU;IACtB,MAAMC,CAAC,GAAGC,IAAI,CAACA,IAAI,CAACC,MAAL,GAAY,CAAb,CAAJ,GAAoB,CAA9B;IACA,MAAMC,GAAG,GAAG,CAAC,GAAGF,IAAJ,EAASD,CAAT,CAAZ;IACAI,MAAM,CAACd,YAAP,CAAoBI,OAApB,CAA4B,YAA5B,EAAyCF,IAAI,CAACG,SAAL,CAAeQ,GAAf,CAAzC;;IACAE,OAAO,CAACF,GAAD,CAAP;;IACAL,OAAO,CAACK,GAAD,CAAP;EACD,CAND;;EAQA,MAAMG,iBAAiB,GAAG,MAAM;IAC9BR,OAAO,CAACS,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAP;EACD,CAFD;;EAIA,oBACE;IAAA,WACGV,IADH,eAEE;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAES,iBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAOD;;GAtBQV,G;;KAAAA,G;AAwBT,eAAeA,GAAf,C,CAGA"},"metadata":{},"sourceType":"module"}