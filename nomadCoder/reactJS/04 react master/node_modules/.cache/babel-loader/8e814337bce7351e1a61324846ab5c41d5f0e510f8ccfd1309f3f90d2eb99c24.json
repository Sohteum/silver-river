{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\components\\\\CompLi.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fnGetRandom = () => Math.floor(Math.random() * 10);\nconst CompLi = _ref => {\n  _s();\n  let {\n    i\n  } = _ref;\n  const fnChangePoint = function (arr) {\n    return arr.filter(v => v === 'o').length;\n  };\n  const {\n    _pointArr,\n    _setPointArr\n  } = useContext(AppContext);\n  const [_num1, _setNum1] = useState(fnGetRandom());\n  const [_num2, _setNum2] = useState(fnGetRandom());\n  const [_readOnly, _setReadOnly] = useState(false);\n  function fnOnInputHandler(e) {\n    const pointArr = [..._pointArr];\n    //여기서 1은 배열의 번호를 말하는거자나 그러니까 해당번째를 바꿀려면 해당번째를 넣어야하는데 그게 i 라는거지\n    pointArr[i] = _num1 + _num2 === parseInt(e.target.value) ? 'o' : 'x'; //이 값을 해당배열의 해당번째 애가 받는것\n    _setPointArr(pointArr);\n  }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: _num1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), \"+\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: _num2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), \"=\", /*#__PURE__*/_jsxDEV(\"input\", {\n      onInput: fnOnInputHandler,\n      type: \"number\",\n      min: \"0\",\n      max: \"9\",\n      readOnly: _readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CompLi, \"jZISTlA9pr+nKHusD8CQwWNiZ9U=\");\n_c = CompLi;\nexport default CompLi;\nvar _c;\n$RefreshReg$(_c, \"CompLi\");","map":{"version":3,"names":["React","useContext","useState","AppContext","jsxDEV","_jsxDEV","fnGetRandom","Math","floor","random","CompLi","_ref","_s","i","fnChangePoint","arr","filter","v","length","_pointArr","_setPointArr","_num1","_setNum1","_num2","_setNum2","_readOnly","_setReadOnly","fnOnInputHandler","e","pointArr","parseInt","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onInput","type","min","max","readOnly","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/components/CompLi.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { AppContext } from '../App';\r\n\r\nconst fnGetRandom = () => Math.floor(Math.random() * 10)\r\n\r\n\r\nconst CompLi = ({ i }) => {\r\n  const fnChangePoint = function (arr) {\r\n    return arr.filter(v => v === 'o').length\r\n  }\r\n  const { _pointArr, _setPointArr } = useContext(AppContext)\r\n\r\n\r\n  const [_num1, _setNum1] = useState(fnGetRandom())\r\n  const [_num2, _setNum2] = useState(fnGetRandom())\r\n  const [_readOnly, _setReadOnly] = useState(false)\r\n\r\n  function fnOnInputHandler(e) {\r\n    const pointArr = [..._pointArr];\r\n    //여기서 1은 배열의 번호를 말하는거자나 그러니까 해당번째를 바꿀려면 해당번째를 넣어야하는데 그게 i 라는거지\r\n    pointArr[i] = (_num1 + _num2 === parseInt(e.target.value)) ? 'o' : 'x' //이 값을 해당배열의 해당번째 애가 받는것\r\n    _setPointArr(pointArr)\r\n  }\r\n\r\n\r\n  return (\r\n    <li>\r\n      <span>{_num1}</span>\r\n      +\r\n      <span>{_num2}</span>\r\n      =\r\n      <input onInput={fnOnInputHandler} type=\"number\" min=\"0\" max=\"9\" readOnly={_readOnly} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CompLi;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAGA,CAAA,KAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC;AAGxD,MAAMC,MAAM,GAAGC,IAAA,IAAW;EAAAC,EAAA;EAAA,IAAV;IAAEC;EAAE,CAAC,GAAAF,IAAA;EACnB,MAAMG,aAAa,GAAG,SAAAA,CAAUC,GAAG,EAAE;IACnC,OAAOA,GAAG,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACC,MAAM;EAC1C,CAAC;EACD,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGnB,UAAU,CAACE,UAAU,CAAC;EAG1D,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAACI,WAAW,EAAE,CAAC;EACjD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAACI,WAAW,EAAE,CAAC;EACjD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAEjD,SAASyB,gBAAgBA,CAACC,CAAC,EAAE;IAC3B,MAAMC,QAAQ,GAAG,CAAC,GAAGV,SAAS,CAAC;IAC/B;IACAU,QAAQ,CAAChB,CAAC,CAAC,GAAIQ,KAAK,GAAGE,KAAK,KAAKO,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,GAAI,GAAG,GAAG,GAAG,EAAC;IACvEZ,YAAY,CAACS,QAAQ,CAAC;EACxB;EAGA,oBACExB,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAOZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,KAEpB,eAAAhC,OAAA;MAAA4B,QAAA,EAAOV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,KAEpB,eAAAhC,OAAA;MAAOiC,OAAO,EAAEX,gBAAiB;MAACY,IAAI,EAAC,QAAQ;MAACC,GAAG,EAAC,GAAG;MAACC,GAAG,EAAC,GAAG;MAACC,QAAQ,EAAEjB;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpF;AAET,CAAC;AAACzB,EAAA,CA5BIF,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}