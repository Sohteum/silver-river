{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\components\\\\CompUl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport CompLi from './CompLi';\nimport { AppContext } from '../App';\n\n// const listArr = ['가', '나', '다']//키값으로 사용하기 위해 부여할 뿐 의미가 없다\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompUl = () => {\n  _s();\n  // const [_listArr, ] = \n  let listCnt = Math.floor(Math.random() * 2);\n  let listArr = [];\n  for (let i = 1; i <= listCnt; i++) {\n    listArr.push(i);\n  }\n  const {\n    _reset\n  } = useContext(AppContext);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [\"   \", listArr.map((v, i) => /*#__PURE__*/_jsxDEV(CompLi, {\n      i: i\n    }, v, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 31\n    }, this))\n    //중괄호는 스크립트문법. 근데 키는 다시 jsx문법. 중괄호 안에서 v를 그냥 쓰면 안된다. 보간법으로 받아야 함 가상돔 태그적을때 변수 호출할때는 무조건 중괄호\n    ]\n  }, _reset, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CompUl, \"VMxJ+XgbN8+B6mF4Q4fAm+iViN0=\");\n_c = CompUl;\nexport default CompUl;\nvar _c;\n$RefreshReg$(_c, \"CompUl\");","map":{"version":3,"names":["React","useContext","CompLi","AppContext","jsxDEV","_jsxDEV","CompUl","_s","listCnt","Math","floor","random","listArr","i","push","_reset","children","map","v","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/components/CompUl.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport CompLi from './CompLi';\r\nimport { AppContext } from '../App';\r\n\r\n\r\n// const listArr = ['가', '나', '다']//키값으로 사용하기 위해 부여할 뿐 의미가 없다\r\n\r\nconst CompUl = () => {\r\n  \r\n  // const [_listArr, ] = \r\n  let listCnt = Math.floor(Math.random()*2)\r\n  let listArr = []\r\n  for(let i=1; i<=listCnt; i++){\r\n    listArr.push(i)\r\n  }\r\n  \r\n  const { _reset } = useContext(AppContext)\r\n  return (\r\n    <ul key={_reset}>   {/* 키값이 바뀌면 리렌더링됨. */}\r\n\r\n      {\r\n        listArr.map((v, i) => <CompLi key={v} i={i} />)\r\n        //중괄호는 스크립트문법. 근데 키는 다시 jsx문법. 중괄호 안에서 v를 그냥 쓰면 안된다. 보간법으로 받아야 함 가상돔 태그적을때 변수 호출할때는 무조건 중괄호\r\n\r\n      }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CompUl;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,UAAU,QAAQ,QAAQ;;AAGnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB;EACA,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,CAAC,CAAC;EACzC,IAAIC,OAAO,GAAG,EAAE;EAChB,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,IAAEL,OAAO,EAAEK,CAAC,EAAE,EAAC;IAC3BD,OAAO,CAACE,IAAI,CAACD,CAAC,CAAC;EACjB;EAEA,MAAM;IAAEE;EAAO,CAAC,GAAGd,UAAU,CAACE,UAAU,CAAC;EACzC,oBACEE,OAAA;IAAAW,QAAA,GAAiB,KAAG,EAGhBJ,OAAO,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEL,CAAC,kBAAKR,OAAA,CAACH,MAAM;MAASW,CAAC,EAAEA;IAAE,GAARK,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU;IAC9C;IAAA;EAAA,GAJKP,MAAM;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAOV;AAET,CAAC;AAACf,EAAA,CApBID,MAAM;AAAAiB,EAAA,GAANjB,MAAM;AAsBZ,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}