{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\conponents\\\\CompBtn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { AppContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompBtn = () => {\n  _s();\n  const {\n    _setSec,\n    _disabled,\n    _setDisabled,\n    intervalID\n  } = useContext(AppContext);\n  function fnTimeStartHandler() {\n    _setDisabled(true);\n    intervalID.current = setInterval(function () {\n      //타이머는 클리어인터벌 못씀 그럼 시간이 멈추니까 그래서 버튼을 못누르게 디스에이블로 멈추기\n      _setSec(prev => prev - 1); //특정이벤트 안에서 바꾸는것.안그러면 무한루프에 빠짐\n      // console.log(_sec) //setInterval시작시점의 초기값만 확인할 수 잇음 그래서 이거 못갖다써\n    }, 1000);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: fnTimeStartHandler,\n    disabled: _disabled,\n    children: \"\\uD0C0\\uC774\\uBA38\\uC2DC\\uC791\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(CompBtn, \"UloXLHmhnI22ZC7/RbL9IqzKi1U=\");\n_c = CompBtn;\nexport default CompBtn;\nvar _c;\n$RefreshReg$(_c, \"CompBtn\");","map":{"version":3,"names":["React","useContext","AppContext","jsxDEV","_jsxDEV","CompBtn","_s","_setSec","_disabled","_setDisabled","intervalID","fnTimeStartHandler","current","setInterval","prev","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/conponents/CompBtn.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { AppContext } from '../App';\r\n\r\nconst CompBtn = () => {\r\n  const { _setSec, _disabled, _setDisabled , intervalID} = useContext(AppContext)\r\n\r\n  function fnTimeStartHandler() {\r\n    _setDisabled(true)\r\n    intervalID.current = setInterval(function () { //타이머는 클리어인터벌 못씀 그럼 시간이 멈추니까 그래서 버튼을 못누르게 디스에이블로 멈추기\r\n      _setSec(prev => prev - 1)//특정이벤트 안에서 바꾸는것.안그러면 무한루프에 빠짐\r\n      // console.log(_sec) //setInterval시작시점의 초기값만 확인할 수 잇음 그래서 이거 못갖다써\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <button onClick={fnTimeStartHandler} disabled={_disabled}>\r\n      타이머시작\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CompBtn;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC,OAAO;IAAEC,SAAS;IAAEC,YAAY;IAAGC;EAAU,CAAC,GAAGT,UAAU,CAACC,UAAU,CAAC;EAE/E,SAASS,kBAAkBA,CAAA,EAAG;IAC5BF,YAAY,CAAC,IAAI,CAAC;IAClBC,UAAU,CAACE,OAAO,GAAGC,WAAW,CAAC,YAAY;MAAE;MAC7CN,OAAO,CAACO,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MACzB;IACF,CAAC,EAAE,IAAI,CAAC;EACV;EAEA,oBACEV,OAAA;IAAQW,OAAO,EAAEJ,kBAAmB;IAACK,QAAQ,EAAER,SAAU;IAAAS,QAAA,EAAC;EAE1D;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAS;AAEb,CAAC;AAACf,EAAA,CAhBID,OAAO;AAAAiB,EAAA,GAAPjB,OAAO;AAkBb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}