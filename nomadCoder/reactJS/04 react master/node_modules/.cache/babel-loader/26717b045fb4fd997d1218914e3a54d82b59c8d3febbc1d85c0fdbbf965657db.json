{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport CompSum from \"./components/CompSum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet arrComp = ['1', '2', '3', '4', '5']; //문제 개수를 바꾸지 못함 state안썼으니까\n\nfunction App() {\n  _s();\n  const [_arrPoint, _setArrPoint] = useState(new Array(5).fill('x'));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB354\\uD558\\uAE30\\uC5F0\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), arrComp.map((v, idx) => {\n      return /*#__PURE__*/_jsxDEV(CompSum, {\n        idx: idx,\n        _arrPoint: _arrPoint,\n        _setArrPoint: _setArrPoint\n      }, v, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 18\n      }, this); //배열을 리턴할때는 키를 사용한다. 최적화를 위해서 //근데 i를 주면 내가 수정을 해버리면 그게 적용이 안되고 계속해서 0부터 나오게 됨. 즉 키값이 바뀔때마다 다시 그리게 됨 //하지만 v를 넣으면 v번째잖아 그러니까 딱 걔만 지울 수가 있는거.\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [_arrPoint.filter(v => v === 'o'), \"\\uC810\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"roaLkDDuvWC96PS1X8AhsE185K8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","CompSum","jsxDEV","_jsxDEV","Fragment","_Fragment","arrComp","App","_s","_arrPoint","_setArrPoint","Array","fill","children","fileName","_jsxFileName","lineNumber","columnNumber","map","v","idx","filter","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport CompSum from \"./components/CompSum\";\r\n\r\n\r\nlet arrComp = ['1','2','3','4','5']  //문제 개수를 바꾸지 못함 state안썼으니까\r\n\r\nfunction App() {\r\n\r\nconst [_arrPoint, _setArrPoint] = useState(new Array(5).fill('x'))\r\n\r\n  return (\r\n    <>\r\n      <h1>더하기연습</h1>\r\n      {\r\n        arrComp.map((v, idx)=>{\r\n          return <CompSum key={v} idx={idx} _arrPoint={_arrPoint} _setArrPoint={_setArrPoint}/>//배열을 리턴할때는 키를 사용한다. 최적화를 위해서 //근데 i를 주면 내가 수정을 해버리면 그게 적용이 안되고 계속해서 0부터 나오게 됨. 즉 키값이 바뀔때마다 다시 그리게 됨 //하지만 v를 넣으면 v번째잖아 그러니까 딱 걔만 지울 수가 있는거.\r\n        })\r\n      }\r\n      <p>\r\n        {\r\n        _arrPoint.filter(v=> v==='o')\r\n        }점</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG3C,IAAIC,OAAO,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,EAAE;;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAIW,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;EAEhE,oBACET,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAEZX,OAAO,CAACY,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAG;MACpB,oBAAOjB,OAAA,CAACF,OAAO;QAASmB,GAAG,EAAEA,GAAI;QAACX,SAAS,EAAEA,SAAU;QAACC,YAAY,EAAEA;MAAa,GAA9DS,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAA+D;IACvF,CAAC,CAAC,eAEJd,OAAA;MAAAU,QAAA,GAEEJ,SAAS,CAACY,MAAM,CAACF,CAAC,IAAGA,CAAC,KAAG,GAAG,CAAC,EAC5B,QAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA,gBACP;AAEP;AAACT,EAAA,CAlBQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}