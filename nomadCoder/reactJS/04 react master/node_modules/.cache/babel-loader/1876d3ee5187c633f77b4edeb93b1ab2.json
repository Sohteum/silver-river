{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\components\\\\CompDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useParams, NavLink, useNavigate } from 'react-router-dom';\nimport { AppContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompDetail = () => {\n  _s();\n\n  const {\n    _todoArr,\n    _setTodoArr\n  } = useContext(AppContext);\n  const params = useParams(); //링크걸때 아이디를 실어서 보냈는데, 주소에 보냈어도 받아먹어야하잖아. 주소뒤에찍어보내는게 파라미터. 확인하려면 리액트에서는 유즈파람을 이용해서 객체로 그 정보를 받아올수있다.\n\n  const nav = useNavigate();\n  const {\n    id\n  } = params;\n\n  const obj = _todoArr.find(v => v.id === parseInt(id));\n\n  const {\n    title,\n    date,\n    time,\n    desc\n  } = obj;\n\n  const fnDeleteHandler = function () {\n    _setTodoArr([..._todoArr].filter(v => parseInt(id) !== v.id)); //스프레드 전개연산자\n    //얘가 받은아이디가 56인데 많은 아이디가 있잖아. 그러니까 그걸빼고 다시 배열을 만든거임\n    //삭제햐면 다시 원래페이지로 돌아가게해야하니까 유즈넹\\비게잇을 호출해서 사용한다.\n\n\n    nav(\"/\");\n  };\n\n  const fnEditHandler = function () {\n    //내가 수정하고싶은애가 몇번째인지 알아내면 됨. v.?????인덱스오브:객체가 안에들어있으면 못찾아. 객체있을때는 파인드인덱스 \n    const todoArr = [..._todoArr];\n    const idx = todoArr.findIndex(v => parseInt(id) !== v.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC138\\uBD80\\uC77C\\uC815\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        defaultValue: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        defaultValue: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        defaultValue: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fnEditHandler,\n      children: \"\\uC218\\uC815\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fnDeleteHandler,\n      children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/\",\n      children: \"\\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompDetail, \"QDglWAHSestxkXFqnVucadburdI=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = CompDetail;\nexport default CompDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompDetail\");","map":{"version":3,"names":["React","useContext","useParams","NavLink","useNavigate","AppContext","CompDetail","_todoArr","_setTodoArr","params","nav","id","obj","find","v","parseInt","title","date","time","desc","fnDeleteHandler","filter","fnEditHandler","todoArr","idx","findIndex"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/components/CompDetail.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { useParams, NavLink, useNavigate } from 'react-router-dom';\r\nimport { AppContext } from '../App';\r\n\r\nconst CompDetail = () => {\r\n  const { _todoArr, _setTodoArr } = useContext(AppContext)\r\n  const params = useParams() //링크걸때 아이디를 실어서 보냈는데, 주소에 보냈어도 받아먹어야하잖아. 주소뒤에찍어보내는게 파라미터. 확인하려면 리액트에서는 유즈파람을 이용해서 객체로 그 정보를 받아올수있다.\r\n  const nav = useNavigate()\r\n  const { id } = params\r\n  const obj = _todoArr.find(v => v.id === parseInt(id))\r\n  const { title, date, time, desc } = obj\r\n\r\n\r\n  const fnDeleteHandler = function () {\r\n    _setTodoArr([..._todoArr].filter(v => parseInt(id) !== (v.id))) //스프레드 전개연산자\r\n    //얘가 받은아이디가 56인데 많은 아이디가 있잖아. 그러니까 그걸빼고 다시 배열을 만든거임\r\n    //삭제햐면 다시 원래페이지로 돌아가게해야하니까 유즈넹\\비게잇을 호출해서 사용한다.\r\n    nav(\"/\")\r\n  }\r\n\r\n  const fnEditHandler = function () {\r\n    //내가 수정하고싶은애가 몇번째인지 알아내면 됨. v.?????인덱스오브:객체가 안에들어있으면 못찾아. 객체있을때는 파인드인덱스 \r\n    const todoArr = [..._todoArr]\r\n    const idx = todoArr.findIndex(v => parseInt(id) !== (v.id))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>세부일정내용</h2>\r\n      {/* <p>{title}</p>\r\n      <p>{date}</p>\r\n      <p>{time}</p>\r\n      <p>{desc}</p> */}\r\n      <p><input type=\"text\" defaultValue={title} /></p> {/* 여기서 디폴트벨류로 바꿔버리면 스테잇값을 받았을때 수정이 ㄷ안됨. 지금은 아니니까사용가능 */}\r\n      <p><input type=\"date\" defaultValue={date} /></p>\r\n      <p><input type=\"time\" defaultValue={time} /></p>\r\n      <p><textarea defaultValue={desc}></textarea></p>\r\n      <button onClick={fnEditHandler} >수정하기</button>\r\n      <button onClick={fnDeleteHandler}>삭제하기</button>\r\n      <NavLink to=\"/\">목록</NavLink> {/* 네비링크랑 그냥 링크가 있는데 네비링크는 현재주소들어가면 알아서 액티브가 추가가됨.(액티브구현자동가능)  */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompDetail;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,WAA7B,QAAgD,kBAAhD;AACA,SAASC,UAAT,QAA2B,QAA3B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAA4BP,UAAU,CAACI,UAAD,CAA5C;EACA,MAAMI,MAAM,GAAGP,SAAS,EAAxB,CAFuB,CAEI;;EAC3B,MAAMQ,GAAG,GAAGN,WAAW,EAAvB;EACA,MAAM;IAAEO;EAAF,IAASF,MAAf;;EACA,MAAMG,GAAG,GAAGL,QAAQ,CAACM,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASI,QAAQ,CAACJ,EAAD,CAApC,CAAZ;;EACA,MAAM;IAAEK,KAAF;IAASC,IAAT;IAAeC,IAAf;IAAqBC;EAArB,IAA8BP,GAApC;;EAGA,MAAMQ,eAAe,GAAG,YAAY;IAClCZ,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcc,MAAd,CAAqBP,CAAC,IAAIC,QAAQ,CAACJ,EAAD,CAAR,KAAkBG,CAAC,CAACH,EAA9C,CAAD,CAAX,CADkC,CAC8B;IAChE;IACA;;;IACAD,GAAG,CAAC,GAAD,CAAH;EACD,CALD;;EAOA,MAAMY,aAAa,GAAG,YAAY;IAChC;IACA,MAAMC,OAAO,GAAG,CAAC,GAAGhB,QAAJ,CAAhB;IACA,MAAMiB,GAAG,GAAGD,OAAO,CAACE,SAAR,CAAkBX,CAAC,IAAIC,QAAQ,CAACJ,EAAD,CAAR,KAAkBG,CAAC,CAACH,EAA3C,CAAZ;EACD,CAJD;;EAMA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAA,uBAAG;QAAO,IAAI,EAAC,MAAZ;QAAmB,YAAY,EAAEK;MAAjC;QAAA;QAAA;QAAA;MAAA;IAAH;MAAA;MAAA;MAAA;IAAA,QANF,oBAOE;MAAA,uBAAG;QAAO,IAAI,EAAC,MAAZ;QAAmB,YAAY,EAAEC;MAAjC;QAAA;QAAA;QAAA;MAAA;IAAH;MAAA;MAAA;MAAA;IAAA,QAPF,eAQE;MAAA,uBAAG;QAAO,IAAI,EAAC,MAAZ;QAAmB,YAAY,EAAEC;MAAjC;QAAA;QAAA;QAAA;MAAA;IAAH;MAAA;MAAA;MAAA;IAAA,QARF,eASE;MAAA,uBAAG;QAAU,YAAY,EAAEC;MAAxB;QAAA;QAAA;QAAA;MAAA;IAAH;MAAA;MAAA;MAAA;IAAA,QATF,eAUE;MAAQ,OAAO,EAAEG,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF,eAWE;MAAQ,OAAO,EAAEF,eAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF,eAYE,QAAC,OAAD;MAAS,EAAE,EAAC,GAAZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAvCD;;GAAMd,U;UAEWJ,S,EACHE,W;;;KAHRE,U;AAyCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}