{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Route, RouterProvider, Routes } from \"react-router-dom\";\nimport CompAdd from \"./coponents/CompAdd\";\nimport CompDetail from \"./coponents/CompDetail\";\nimport CompMian from \"./coponents/CompMian\";\nimport { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = createContext();\n\nconst fnSetArr = () => {\n  const arr = [{\n    id: '1',\n    title: '식사',\n    date: '2020-02-02',\n    time: '32:00',\n    desc: 'ㅇㄹㄺㄴㄴ'\n  }];\n  return arr;\n};\n\nfunction App() {\n  _s();\n\n  const [_orgArr, _setOrgArr] = useState(fnSetArr()); //화면에 출력되는 목록(검색용)이랑 진짜리스트 두개를 만들거야 출력되는 목록을따로 만드는 이유는 원본을 보존하지 않으면 검색기능 등을 활용했을때 다 지워버리면 안되니까 출력용, 원본용(회원추가나 삭제, 변경)\n\n  const [_outputArr, _setOutputArr] = useState(fnSetArr()); //이게 화면 출력용\n\n  console.log(fnSetArr());\n  return /*#__PURE__*/_jsxDEV(AppContext.provider, {\n    value: (_orgArr, _setOrgArr, _outputArr, _setOutputArr),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"todoApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(CompMian, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add\",\n        element: /*#__PURE__*/_jsxDEV(CompAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail\",\n        element: /*#__PURE__*/_jsxDEV(CompDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FQ6jWNl3TWETmVErks7ZZnCkPdY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","RouterProvider","Routes","CompAdd","CompDetail","CompMian","useContext","useState","AppContext","createContext","fnSetArr","arr","id","title","date","time","desc","App","_orgArr","_setOrgArr","_outputArr","_setOutputArr","console","log"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/App.js"],"sourcesContent":["import { Route, RouterProvider, Routes } from \"react-router-dom\";\r\nimport CompAdd from \"./coponents/CompAdd\";\r\nimport CompDetail from \"./coponents/CompDetail\";\r\nimport CompMian from \"./coponents/CompMian\";\r\nimport { useContext, useState } from \"react\";\r\n\r\nexport const AppContext = createContext()\r\nconst fnSetArr = () => {\r\n  const arr = [\r\n    {\r\n      id: '1',\r\n      title: '식사',\r\n      date: '2020-02-02',\r\n      time: '32:00',\r\n      desc: 'ㅇㄹㄺㄴㄴ',\r\n    },\r\n  ]\r\n  return arr\r\n}\r\n\r\n\r\nfunction App() {\r\n  const [_orgArr, _setOrgArr] = useState(fnSetArr()) //화면에 출력되는 목록(검색용)이랑 진짜리스트 두개를 만들거야 출력되는 목록을따로 만드는 이유는 원본을 보존하지 않으면 검색기능 등을 활용했을때 다 지워버리면 안되니까 출력용, 원본용(회원추가나 삭제, 변경)\r\n  const [_outputArr, _setOutputArr] = useState(fnSetArr()) //이게 화면 출력용\r\n\r\n  console.log(fnSetArr())\r\n\r\n  return (\r\n    <AppContext.provider value={_orgArr, _setOrgArr, _outputArr, _setOutputArr}>\r\n      <h1>todoApp</h1>\r\n      <hr />\r\n      <Routes>\r\n        <Route path=\"/\" element={<CompMian />} />\r\n        <Route path=\"/add\" element={<CompAdd />} />\r\n        <Route path=\"/detail\" element={<CompDetail />} />\r\n      </Routes>\r\n    </AppContext.provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,cAAhB,EAAgCC,MAAhC,QAA8C,kBAA9C;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;;AAEA,OAAO,MAAMC,UAAU,GAAGC,aAAa,EAAhC;;AACP,MAAMC,QAAQ,GAAG,MAAM;EACrB,MAAMC,GAAG,GAAG,CACV;IACEC,EAAE,EAAE,GADN;IAEEC,KAAK,EAAE,IAFT;IAGEC,IAAI,EAAE,YAHR;IAIEC,IAAI,EAAE,OAJR;IAKEC,IAAI,EAAE;EALR,CADU,CAAZ;EASA,OAAOL,GAAP;AACD,CAXD;;AAcA,SAASM,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAACG,QAAQ,EAAT,CAAtC,CADa,CACsC;;EACnD,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAACG,QAAQ,EAAT,CAA5C,CAFa,CAE4C;;EAEzDY,OAAO,CAACC,GAAR,CAAYb,QAAQ,EAApB;EAEA,oBACE,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,GAAEQ,OAAO,EAAEC,UAAF,EAAcC,UAAd,EAA0BC,aAAnC,CAA1B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,MAAZ;QAAmB,OAAO,eAAE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA;MAA5B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,SAAZ;QAAsB,OAAO,eAAE,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA;MAA/B;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAjBQJ,G;;KAAAA,G;AAmBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}