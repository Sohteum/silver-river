{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport CompResult from \"./components/CompResult\";\nimport CompUl from \"./components/CompUl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext(); //전달해주고싶으면 크리에잇 컨텍스트. 익스폴트를 만드시 해줘야함. 그래서 앱 안에서 만들면 안됨. app이 익스폴트가 이미 되어있어서 밖에서 해야함\n\nconst fnChangePoint = function (arr) {\n  return arr.filter(v => v === 'o').length;\n};\nfunction App() {\n  _s();\n  const [_pointArr, _setPointArr, fnChangePoint] = useState(new Array(3).fill('x')); //점수출력용//함수()는 실행하겠다는뜻.여기선 ()쓰면 안됨\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      _pointArr,\n      _setPointArr\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"context\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompUl, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompResult, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H46a0k8/FoLMHCfylBj6Rzd5Sb0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createContext","useState","CompResult","CompUl","jsxDEV","_jsxDEV","AppContext","fnChangePoint","arr","filter","v","length","App","_s","_pointArr","_setPointArr","Array","fill","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/App.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport CompResult from \"./components/CompResult\";\r\nimport CompUl from \"./components/CompUl\";\r\nexport const AppContext = createContext() //전달해주고싶으면 크리에잇 컨텍스트. 익스폴트를 만드시 해줘야함. 그래서 앱 안에서 만들면 안됨. app이 익스폴트가 이미 되어있어서 밖에서 해야함\r\n\r\nconst fnChangePoint = function(arr){\r\nreturn arr.filter(v=>v==='o').length\r\n}\r\n\r\nfunction App() {\r\n  const [_pointArr, _setPointArr, fnChangePoint] = useState(new Array(3).fill('x'))//점수출력용//함수()는 실행하겠다는뜻.여기선 ()쓰면 안됨\r\n\r\n  return (\r\n    <AppContext.Provider value={{\r\n      _pointArr, _setPointArr\r\n    }}> {/* 전달할 수 있는 범위가 프로바이더, value는 보낼 객체..??그래서 중괄호를 하나 더 열어서 다 담아서 보낸다 */}\r\n      <h1>context</h1>\r\n      <hr />\r\n      <CompUl />\r\n      <hr />\r\n      <CompResult />\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,OAAO,MAAMC,UAAU,gBAAGN,aAAa,EAAE,EAAC;;AAE1C,MAAMO,aAAa,GAAG,SAAAA,CAASC,GAAG,EAAC;EACnC,OAAOA,GAAG,CAACC,MAAM,CAACC,CAAC,IAAEA,CAAC,KAAG,GAAG,CAAC,CAACC,MAAM;AACpC,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,EAAER,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAIe,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;;EAEjF,oBACEZ,OAAA,CAACC,UAAU,CAACY,QAAQ;IAACC,KAAK,EAAE;MAC1BL,SAAS;MAAEC;IACb,CAAE;IAAAK,QAAA,GAAC,GAAC,eACFf,OAAA;MAAAe,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAChBnB,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNnB,OAAA,CAACF,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACVnB,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNnB,OAAA,CAACH,UAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACM;AAE1B;AAACX,EAAA,CAdQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAgBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}