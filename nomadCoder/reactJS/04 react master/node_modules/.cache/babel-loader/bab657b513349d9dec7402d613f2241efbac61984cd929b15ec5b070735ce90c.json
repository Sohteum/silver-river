{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport CompClock from \"./conponents/CompClock\";\nimport './css/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nlet time = new Date(); // 지금 현재 시각을 알아냄\n\nfunction App() {\n  _s();\n  console.log(time);\n  const [_hour, _setHour] = useState(time.getHours());\n  const [_min, _setMin] = useState(time.getMinutes());\n  const [_sec, _setSec] = useState(time.getSeconds());\n  const [_year, _setYear] = useState(time.getFullYear());\n  const [_month, _setMonth] = useState(time.getMonth());\n  const [_date, _setDate] = useState(time.getDate());\n  const [_day, _setDay] = useState(time.getDay());\n  //time.getFullYear()\n  //time.getMonth() 0월부터 나옴 +1\n  //time.getDate()\n  //time.getDay() 일요일=0, [일, 월, 화, 수,....] 배열을 만들어서 x번째.출력\n\n  useEffect(() => {\n    setInterval(function () {\n      time = new Date();\n      _setHour(time.getHours());\n      _setMin(time.getMinutes());\n      _setSec(time.getSeconds());\n    }, 1000);\n  }, []); //셋인터벌 유즈이펙트 훅스에서만, 시작할때 한번이니까 시, 분, 초가 업뎃이 안됨, 유즈이펙트 디펜던시 안에서는 초기값만 가져올 수 있음\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      _hour,\n      _min,\n      _sec,\n      _year,\n      _setYear,\n      _month,\n      _setMonth,\n      _date,\n      _setDate,\n      _day,\n      _setDay\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC2DC\\uACC4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompClock, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"v3Qhh1qe7jBTfH9P44z3DypWNmw=\");\n_c = App;\nexport default App;\n\n//위쪽에 디지털 시계 만들고 am,pm구분하기,\n//아래에는 2023.01.24 (요일)\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createContext","useEffect","useState","CompClock","jsxDEV","_jsxDEV","AppContext","time","Date","App","_s","console","log","_hour","_setHour","getHours","_min","_setMin","getMinutes","_sec","_setSec","getSeconds","_year","_setYear","getFullYear","_month","_setMonth","getMonth","_date","_setDate","getDate","_day","_setDay","getDay","setInterval","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/App.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport CompClock from \"./conponents/CompClock\";\r\nimport './css/style.css';\r\nexport const AppContext = createContext()\r\n\r\nlet time = new Date()// 지금 현재 시각을 알아냄\r\n\r\nfunction App() {\r\n  console.log(time);\r\n  const [_hour, _setHour] = useState(time.getHours())\r\n  const [_min, _setMin] = useState(time.getMinutes())\r\n  const [_sec, _setSec] = useState(time.getSeconds())\r\n  const [_year, _setYear] = useState(time.getFullYear())\r\n  const [_month, _setMonth] = useState(time.getMonth())\r\n  const [_date, _setDate] = useState(time.getDate())\r\n  const [_day, _setDay] = useState(time.getDay())\r\n  //time.getFullYear()\r\n  //time.getMonth() 0월부터 나옴 +1\r\n  //time.getDate()\r\n  //time.getDay() 일요일=0, [일, 월, 화, 수,....] 배열을 만들어서 x번째.출력\r\n\r\n  useEffect(() => {\r\n    setInterval(function () {\r\n      time = new Date()\r\n      _setHour(time.getHours())\r\n      _setMin(time.getMinutes())\r\n      _setSec(time.getSeconds())\r\n    }, 1000)\r\n  }, [])//셋인터벌 유즈이펙트 훅스에서만, 시작할때 한번이니까 시, 분, 초가 업뎃이 안됨, 유즈이펙트 디펜던시 안에서는 초기값만 가져올 수 있음\r\n  return (\r\n    <AppContext.Provider value={{\r\n      _hour, _min, _sec,\r\n      _year, _setYear,\r\n      _month, _setMonth,\r\n      _date, _setDate,\r\n      _day, _setDay\r\n\r\n    }}>\r\n      <h1>시계</h1>\r\n      <CompClock />\r\n\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n//위쪽에 디지털 시계 만들고 am,pm구분하기,\r\n//아래에는 2023.01.24 (요일)\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzB,OAAO,MAAMC,UAAU,gBAAGN,aAAa,EAAE;AAEzC,IAAIO,IAAI,GAAG,IAAIC,IAAI,EAAE;;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EACjB,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACK,IAAI,CAACQ,QAAQ,EAAE,CAAC;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAACK,IAAI,CAACW,UAAU,EAAE,CAAC;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAACK,IAAI,CAACc,UAAU,EAAE,CAAC;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAACK,IAAI,CAACiB,WAAW,EAAE,CAAC;EACtD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAACK,IAAI,CAACoB,QAAQ,EAAE,CAAC;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAACK,IAAI,CAACuB,OAAO,EAAE,CAAC;EAClD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG9B,QAAQ,CAACK,IAAI,CAAC0B,MAAM,EAAE,CAAC;EAC/C;EACA;EACA;EACA;;EAEAhC,SAAS,CAAC,MAAM;IACdiC,WAAW,CAAC,YAAY;MACtB3B,IAAI,GAAG,IAAIC,IAAI,EAAE;MACjBM,QAAQ,CAACP,IAAI,CAACQ,QAAQ,EAAE,CAAC;MACzBE,OAAO,CAACV,IAAI,CAACW,UAAU,EAAE,CAAC;MAC1BE,OAAO,CAACb,IAAI,CAACc,UAAU,EAAE,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EACN,oBACEhB,OAAA,CAACC,UAAU,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAC1BvB,KAAK;MAAEG,IAAI;MAAEG,IAAI;MACjBG,KAAK;MAAEC,QAAQ;MACfE,MAAM;MAAEC,SAAS;MACjBE,KAAK;MAAEC,QAAQ;MACfE,IAAI;MAAEC;IAER,CAAE;IAAAK,QAAA,gBACAhC,OAAA;MAAAgC,QAAA,EAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACXpC,OAAA,CAACF,SAAS;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEO;AAE1B;AAAC/B,EAAA,CApCQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAuCZ,eAAeA,GAAG;;AAGlB;AACA;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}