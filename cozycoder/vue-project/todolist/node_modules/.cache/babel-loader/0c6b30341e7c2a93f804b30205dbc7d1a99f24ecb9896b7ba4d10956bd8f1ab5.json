{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"To-do List\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 2\n};\nconst _hoisted_5 = [\"id\", \"onUpdate:modelValue\"];\nconst _hoisted_6 = [\"for\"];\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AddFormVue = _resolveComponent(\"AddFormVue\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, $setup.toggle ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"true\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"false\")), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.fnToggle && $setup.fnToggle(...args))\n  }, \"toggle\"), _createVNode(_component_AddFormVue, {\n    onAddTodo: $setup.fnAddTodo\n  }, null, 8 /* PROPS */, [\"onAddTodo\"]), !$setup.todoArr.length ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"등록된 일정이 존재하지 않습니다.\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"  v-if=\\\"\\\"이런애들. :id 이런애들 발견하면 무조건 스크립트 문법임 \"), _createCommentVNode(\" \\\"!todoArr.length\\\"0이라면, 0은 false니까 앞에 느낌표만 하나 붙이면 됨 \"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.todoArr, (v, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: v.id\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      id: v.id,\n      \"onUpdate:modelValue\": $event => v.completed = $event,\n      type: \"checkbox\"\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vModelCheckbox, v.completed]]), _createCommentVNode(\" v-model에 아래 트루폴스에따라 체크박스가 달라짐 \"), _createElementVNode(\"label\", {\n      for: v.id,\n      style: _normalizeStyle(v.completed ? $setup.todoStyle : ''),\n      class: _normalizeClass(v.completed ? 'disable' : '')\n    }, [_createCommentVNode(\" 포랑 아이디 맞춰주면 글자 클릭해도 체크박스체크가능 \"), _createCommentVNode(\" 여기서 :style=\\\"v.completed ? todoStyle : {}\\\" 이것도 가능\"), _createCommentVNode(\" :class=\\\"{ disable: v.completed }\\\" \"), _createTextVNode(\" \" + _toDisplayString(v.subject), 1 /* TEXT */)], 14 /* CLASS, STYLE, PROPS */, _hoisted_6), _createElementVNode(\"button\", {\n      onClick: $event => $setup.fnDelete(index)\n    }, \"delete\", 8 /* PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","$setup","toggle","_createElementBlock","_hoisted_2","_hoisted_3","onClick","_cache","args","fnToggle","_createVNode","_component_AddFormVue","onAddTodo","fnAddTodo","todoArr","length","_hoisted_4","_createCommentVNode","_Fragment","_renderList","v","index","key","id","completed","$event","type","for","style","_normalizeStyle","todoStyle","class","_normalizeClass","_toDisplayString","subject","fnDelete","_hoisted_7"],"sources":["C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\App.vue"],"sourcesContent":["<template>\n  <h2>To-do List</h2>\n  <span v-if=\"toggle\">true</span>\n  <span v-else>false</span>\n  <button @click=\"fnToggle\">toggle</button>\n\n  <AddFormVue @add-todo=\"fnAddTodo\" />\n  <p v-if=\"!todoArr.length\">등록된 일정이 존재하지 않습니다.</p>\n  <!--  v-if=\"\"이런애들. :id 이런애들 발견하면 무조건 스크립트 문법임 -->\n  <!-- \"!todoArr.length\"0이라면, 0은 false니까 앞에 느낌표만 하나 붙이면 됨 -->\n  <ul>\n    <li\n      v-for=\"(v, index) in todoArr\"\n      :key=\"v.id\"\n    >\n      <input\n        :id=\"v.id\"\n        v-model=\"v.completed\"\n        type=\"checkbox\"\n      /><!-- v-model에 아래 트루폴스에따라 체크박스가 달라짐 -->\n      <label\n        :for=\"v.id\"\n        :style=\"v.completed ? todoStyle : ''\"\n        :class=\"v.completed ? 'disable' : ''\"\n        ><!-- 포랑 아이디 맞춰주면 글자 클릭해도 체크박스체크가능 -->\n        <!-- 여기서 :style=\"v.completed ? todoStyle : {}\" 이것도 가능-->\n        <!-- :class=\"{ disable: v.completed }\" -->\n        {{ v.subject }}</label\n      >\n      <button @click=\"fnDelete(index)\">delete</button>\n    </li>\n  </ul>\n</template>\n\n<script>\n/* eslint-disable */\n//워닝이 너무 많이 뜰때 사용가능함!\nimport { ref } from 'vue';\nimport AddFormVue from './components/AddForm.vue';\n\nexport default {\n  name: 'App',\n  components: { AddFormVue },\n\n  setup() {\n    const toggle = ref(false);\n\n    const todoStyle = {\n      textDecoration: 'line-through',\n      color: 'gray',\n    };\n    const fnDelete = function (index) {\n      /* 여기에 인덱스 쓸거니까 넣어줘야함 */\n      todoArr.value.splice(index, 1); /* 리액트는 새로운 배열로 교체를 해줘야하는데, 완전히 다른사람이되어야 갱신이됨. 하지만 여기는 밥먹고와도 갱신*/\n    };\n\n    const fnToggle = function () {\n      toggle.value = !toggle.value;\n    };\n\n    const fnAddTodo = function (todo) {\n      log(todo);\n    };\n\n    return {\n      todoArr,\n      toggle,\n      fnToggle,\n      todoStyle,\n      fnDelete,\n      fnAddTodo,\n    };\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";gCACEA,mBAAA,CAAmB,YAAf,YAAU;;;;;;;;;;;;;;;6DAAdC,UAAmB,EACPC,MAAA,CAAAC,MAAM,I,cAAlBC,mBAAA,CAA+B,QAAAC,UAAA,EAAX,MAAI,M,cACxBD,mBAAA,CAAyB,QAAAE,UAAA,EAAZ,OAAK,IAClBN,mBAAA,CAAyC;IAAhCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAQ,QAAA,IAAAR,MAAA,CAAAQ,QAAA,IAAAD,IAAA,CAAQ;KAAE,QAAM,GAEhCE,YAAA,CAAoCC,qBAAA;IAAvBC,SAAQ,EAAEX,MAAA,CAAAY;EAAS,wC,CACtBZ,MAAA,CAAAa,OAAO,CAACC,MAAM,I,cAAxBZ,mBAAA,CAAgD,KAAAa,UAAA,EAAtB,oBAAkB,K,mCAC5CC,mBAAA,gDAAiD,EACjDA,mBAAA,0DAA2D,EAC3DlB,mBAAA,CAqBK,c,kBApBHI,mBAAA,CAmBKe,SAAA,QAAAC,WAAA,CAlBkBlB,MAAA,CAAAa,OAAO,GAApBM,CAAC,EAAEC,KAAK;yBADlBlB,mBAAA,CAmBK;MAjBFmB,GAAG,EAAEF,CAAC,CAACG;wBAERxB,mBAAA,CAIE;MAHCwB,EAAE,EAAEH,CAAC,CAACG,EAAE;uCACAH,CAAC,CAACI,SAAS,GAAAC,MAAA;MACpBC,IAAI,EAAC;4DADIN,CAAC,CAACI,SAAS,E,GAEpBP,mBAAA,mCAAsC,EACxClB,mBAAA,CAQC;MAPE4B,GAAG,EAAEP,CAAC,CAACG,EAAE;MACTK,KAAK,EAAAC,eAAA,CAAET,CAAC,CAACI,SAAS,GAAGvB,MAAA,CAAA6B,SAAS;MAC9BC,KAAK,EAAAC,eAAA,CAAEZ,CAAC,CAACI,SAAS;QAClBP,mBAAA,kCAAqC,EACtCA,mBAAA,uDAAwD,EACxDA,mBAAA,yCAA0C,E,iBAAA,GAC1C,GAAAgB,gBAAA,CAAGb,CAAC,CAACc,OAAO,iB,6CAEdnC,mBAAA,CAAgD;MAAvCO,OAAK,EAAAmB,MAAA,IAAExB,MAAA,CAAAkC,QAAQ,CAACd,KAAK;OAAG,QAAM,iBAAAe,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}