{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\n//워닝이 너무 많이 뜰때 사용가능함!\nimport { ref } from 'vue';\nimport AddFormVue from './components/AddForm.vue';\nexport default {\n  name: 'App',\n  components: {\n    AddForm\n  },\n  setup() {\n    const toggle = ref(false);\n    const isErr = ref(false);\n    const todo = ref('');\n    const todoArr = ref([]);\n    const todoStyle = {\n      textDecoration: 'line-through',\n      color: 'gray'\n    };\n    const fnDelete = function (index) {\n      /* 여기에 인덱스 쓸거니까 넣어줘야함 */\n      todoArr.value.splice(index, 1); /* 리액트는 새로운 배열로 교체를 해줘야하는데, 완전히 다른사람이되어야 갱신이됨. 하지만 여기는 밥먹고와도 갱신*/\n    };\n\n    const fnSubmitHandler = function () {\n      // e.preventDefault(); 위에서 .prevent로 모디파이어로 대체 사용 가능함\n      isErr.value = !todo.value && true;\n      if (isErr.value) return false;\n      // isErr.value = (!todo.value)||false;\n      todoArr.value.push({\n        id: Date.now(),\n        subject: todo.value,\n        completed: false\n      });\n      todo.value = '';\n    };\n    const fnToggle = function () {\n      toggle.value = !toggle.value;\n    };\n    return {\n      todo,\n      fnSubmitHandler,\n      todoArr,\n      toggle,\n      fnToggle,\n      isErr,\n      todoStyle,\n      fnDelete\n    };\n  }\n};","map":{"version":3,"names":["ref","AddFormVue","name","components","AddForm","setup","toggle","isErr","todo","todoArr","todoStyle","textDecoration","color","fnDelete","index","value","splice","fnSubmitHandler","push","id","Date","now","subject","completed","fnToggle"],"sources":["C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\App.vue"],"sourcesContent":["<template>\n  <h2>To-do List</h2>\n  <span v-if=\"toggle\">true</span>\n  <span v-else>false</span>\n  <button @click=\"fnToggle\">toggle</button>\n  <form @submit.prevent=\"fnSubmitHandler\">\n    <input\n      type=\"text\"\n      v-model=\"todo\"\n      placeholder=\"type new todo-list\"\n    />\n    <button>click</button>\n  </form>\n  <p v-if=\"isErr\">Error</p>\n  <hr />\n\n  <p v-if=\"!todoArr.length\">등록된 일정이 존재하지 않습니다.</p>\n  <!--  v-if=\"\"이런애들. :id 이런애들 발견하면 무조건 스크립트 문법임 -->\n  <!-- \"!todoArr.length\"0이라면, 0은 false니까 앞에 느낌표만 하나 붙이면 됨 -->\n  <ul>\n    <li\n      v-for=\"(v, index) in todoArr\"\n      :key=\"v.id\"\n    >\n      <input\n        :id=\"v.id\"\n        v-model=\"v.completed\"\n        type=\"checkbox\"\n      /><!-- v-model에 아래 트루폴스에따라 체크박스가 달라짐 -->\n      <label\n        :for=\"v.id\"\n        :style=\"v.completed ? todoStyle : ''\"\n        :class=\"v.completed ? 'disable' : ''\"\n        ><!-- 포랑 아이디 맞춰주면 글자 클릭해도 체크박스체크가능 -->\n        <!-- 여기서 :style=\"v.completed ? todoStyle : {}\" 이것도 가능-->\n        <!-- :class=\"{ disable: v.completed }\" -->\n        {{ v.subject }}</label\n      >\n      <button @click=\"fnDelete(index)\">delete</button>\n    </li>\n  </ul>\n</template>\n\n<script>\n/* eslint-disable */\n//워닝이 너무 많이 뜰때 사용가능함!\nimport { ref } from 'vue';\nimport AddFormVue from './components/AddForm.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    AddForm,\n  },\n  setup() {\n    const toggle = ref(false);\n    const isErr = ref(false);\n    const todo = ref('');\n    const todoArr = ref([]);\n    const todoStyle = {\n      textDecoration: 'line-through',\n      color: 'gray',\n    };\n    const fnDelete = function (index) {\n      /* 여기에 인덱스 쓸거니까 넣어줘야함 */\n      todoArr.value.splice(index, 1); /* 리액트는 새로운 배열로 교체를 해줘야하는데, 완전히 다른사람이되어야 갱신이됨. 하지만 여기는 밥먹고와도 갱신*/\n    };\n\n    const fnSubmitHandler = function () {\n      // e.preventDefault(); 위에서 .prevent로 모디파이어로 대체 사용 가능함\n      isErr.value = !todo.value && true;\n      if (isErr.value) return false;\n      // isErr.value = (!todo.value)||false;\n      todoArr.value.push({\n        id: Date.now(),\n        subject: todo.value,\n        completed: false,\n      });\n      todo.value = '';\n    };\n\n    const fnToggle = function () {\n      toggle.value = !toggle.value;\n    };\n    return {\n      todo,\n      fnSubmitHandler,\n      todoArr,\n      toggle,\n      fnToggle,\n      isErr,\n      todoStyle,\n      fnDelete,\n    };\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";AA4CA;AACA;AACA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,UAAS,MAAO,0BAA0B;AAEjD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVC;EACF,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIN,GAAG,CAAC,KAAK,CAAC;IACzB,MAAMO,KAAI,GAAIP,GAAG,CAAC,KAAK,CAAC;IACxB,MAAMQ,IAAG,GAAIR,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMS,OAAM,GAAIT,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMU,SAAQ,GAAI;MAChBC,cAAc,EAAE,cAAc;MAC9BC,KAAK,EAAE;IACT,CAAC;IACD,MAAMC,QAAO,GAAI,SAAAA,CAAUC,KAAK,EAAE;MAChC;MACAL,OAAO,CAACM,KAAK,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,EAAE;IAClC,CAAC;;IAED,MAAMG,eAAc,GAAI,SAAAA,CAAA,EAAY;MAClC;MACAV,KAAK,CAACQ,KAAI,GAAI,CAACP,IAAI,CAACO,KAAI,IAAK,IAAI;MACjC,IAAIR,KAAK,CAACQ,KAAK,EAAE,OAAO,KAAK;MAC7B;MACAN,OAAO,CAACM,KAAK,CAACG,IAAI,CAAC;QACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,OAAO,EAAEd,IAAI,CAACO,KAAK;QACnBQ,SAAS,EAAE;MACb,CAAC,CAAC;MACFf,IAAI,CAACO,KAAI,GAAI,EAAE;IACjB,CAAC;IAED,MAAMS,QAAO,GAAI,SAAAA,CAAA,EAAY;MAC3BlB,MAAM,CAACS,KAAI,GAAI,CAACT,MAAM,CAACS,KAAK;IAC9B,CAAC;IACD,OAAO;MACLP,IAAI;MACJS,eAAe;MACfR,OAAO;MACPH,MAAM;MACNkB,QAAQ;MACRjB,KAAK;MACLG,SAAS;MACTG;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}