{"ast":null,"code":"import { ref } from 'vue';\nexport default {\n  setup(props, context) {\n    const todo = ref('');\n    // const todoArr = ref([]);\n    const isErr = ref(false);\n    const fnSubmitHandler = function () {\n      // e.preventDefault(); 위에서 .prevent로 모디파이어로 대체 사용 가능함\n      isErr.value = !todo.value && true;\n      context.emit('add-todo', {\n        /* 부모가 쓸때는 괄호안에 있는걸 이용하면 됨. */\n        id: Date.now(),\n        subject: todo.value,\n        completed: false\n      });\n      if (isErr.value) return false;\n\n      // isErr.value = (!todo.value)||false;\n      // todoArr.value.push({\n      //   id: Date.now(),\n      //   subject: todo.value,\n      //   completed: false,\n      // });\n      todo.value = '';\n    };\n    return {\n      todo,\n      todoArr,\n      isErr,\n      fnSubmitHandler\n    };\n  }\n};","map":{"version":3,"names":["ref","setup","props","context","todo","isErr","fnSubmitHandler","value","emit","id","Date","now","subject","completed","todoArr"],"sources":["C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\components\\AddForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"fnSubmitHandler\">\r\n    <!-- @는 받았을때,를 의미 -->\r\n    <input\r\n      type=\"text\"\r\n      v-model=\"todo\"\r\n      placeholder=\"type new todo-list\"\r\n    />\r\n    <button>click</button>\r\n  </form>\r\n  <p v-if=\"isErr\">Error</p>\r\n  <hr />\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  setup(props, context) {\r\n    const todo = ref('');\r\n    // const todoArr = ref([]);\r\n    const isErr = ref(false);\r\n\r\n    const fnSubmitHandler = function () {\r\n      // e.preventDefault(); 위에서 .prevent로 모디파이어로 대체 사용 가능함\r\n      isErr.value = !todo.value && true;\r\n\r\n      context.emit('add-todo', {\r\n        /* 부모가 쓸때는 괄호안에 있는걸 이용하면 됨. */\r\n        id: Date.now(),\r\n        subject: todo.value,\r\n        completed: false,\r\n      });\r\n\r\n      if (isErr.value) return false;\r\n\r\n      // isErr.value = (!todo.value)||false;\r\n      // todoArr.value.push({\r\n      //   id: Date.now(),\r\n      //   subject: todo.value,\r\n      //   completed: false,\r\n      // });\r\n      todo.value = '';\r\n    };\r\n\r\n    return {\r\n      todo,\r\n      todoArr,\r\n      isErr,\r\n      fnSubmitHandler,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n\r\n<!-- \r\n<script>\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  setup(props, context) {\r\n    const todo = ref('');\r\n    const hasError = ref(false);\r\n    const onSubmit = () => {\r\n      if (todo.value === '') {\r\n        hasError.value = true;\r\n      } else {\r\n        context.emit('add-todo', {\r\n          id: Date.now(),\r\n          subject: todo.value,\r\n          completed: false,\r\n        });\r\n        hasError.value = false;\r\n        todo.value = '';\r\n      }\r\n    };\r\n\r\n    return {\r\n      todo,\r\n      hasError,\r\n      onSubmit,\r\n    };\r\n  },\r\n};\r\n</script> -->\r\n"],"mappings":"AAeA,SAASA,GAAE,QAAS,KAAK;AAEzB,eAAe;EACbC,KAAKA,CAACC,KAAK,EAAEC,OAAO,EAAE;IACpB,MAAMC,IAAG,GAAIJ,GAAG,CAAC,EAAE,CAAC;IACpB;IACA,MAAMK,KAAI,GAAIL,GAAG,CAAC,KAAK,CAAC;IAExB,MAAMM,eAAc,GAAI,SAAAA,CAAA,EAAY;MAClC;MACAD,KAAK,CAACE,KAAI,GAAI,CAACH,IAAI,CAACG,KAAI,IAAK,IAAI;MAEjCJ,OAAO,CAACK,IAAI,CAAC,UAAU,EAAE;QACvB;QACAC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,OAAO,EAAER,IAAI,CAACG,KAAK;QACnBM,SAAS,EAAE;MACb,CAAC,CAAC;MAEF,IAAIR,KAAK,CAACE,KAAK,EAAE,OAAO,KAAK;;MAE7B;MACA;MACA;MACA;MACA;MACA;MACAH,IAAI,CAACG,KAAI,GAAI,EAAE;IACjB,CAAC;IAED,OAAO;MACLH,IAAI;MACJU,OAAO;MACPT,KAAK;MACLC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}