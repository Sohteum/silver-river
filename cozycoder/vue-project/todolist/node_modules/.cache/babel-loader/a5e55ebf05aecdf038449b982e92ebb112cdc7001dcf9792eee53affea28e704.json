{"ast":null,"code":"/* eslint-disable */\n//워닝이 너무 많이 뜰때 사용가능함!\nimport { ref } from 'vue';\nimport AddFormVue from './components/AddForm.vue';\nimport TodoList from './components/TodoList.vue';\nexport default {\n  name: 'App',\n  components: {\n    AddFormVue,\n    TodoList\n  },\n  setup() {\n    const toggle = ref(false);\n    const todoArr = ref([]);\n    const todoStyle = {\n      textDecoration: 'line-through',\n      color: 'gray'\n    };\n    const fnDelete = function (index) {\n      /* 여기에 인덱스 쓸거니까 넣어줘야함 */\n      todoArr.value.splice(index, 1); /* 리액트는 새로운 배열로 교체를 해줘야하는데, 완전히 다른사람이되어야 갱신이됨. 하지만 여기는 밥먹고와도 갱신*/\n    };\n\n    const fnToggle = function () {\n      toggle.value = !toggle.value;\n    };\n    const fnAddTodo = function (sendEmit) {\n      colsole.log(sendEmit);\n    };\n    return {\n      todoArr,\n      toggle,\n      fnToggle,\n      todoStyle,\n      fnDelete,\n      fnAddTodo\n    };\n  }\n};","map":{"version":3,"names":["ref","AddFormVue","TodoList","name","components","setup","toggle","todoArr","todoStyle","textDecoration","color","fnDelete","index","value","splice","fnToggle","fnAddTodo","sendEmit","colsole","log"],"sources":["C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\App.vue"],"sourcesContent":["<template>\n  <h2>To-do List</h2>\n  <span v-if=\"toggle\">true</span>\n  <span v-else>false</span>\n  <button @click=\"fnToggle\">toggle</button>\n\n  <AddFormVue @add-todo=\"sendEmit\" />\n  <TodoList :todoArr=\"todoArr\" />\n\n  <p v-if=\"!todoArr.length\">등록된 일정이 존재하지 않습니다.</p>\n  <!--  v-if=\"\"이런애들. :id 이런애들 발견하면 무조건 스크립트 문법임 -->\n  <!-- \"!todoArr.length\"0이라면, 0은 false니까 앞에 느낌표만 하나 붙이면 됨 -->\n</template>\n\n<script>\n/* eslint-disable */\n//워닝이 너무 많이 뜰때 사용가능함!\nimport { ref } from 'vue';\nimport AddFormVue from './components/AddForm.vue';\nimport TodoList from './components/TodoList.vue';\n\nexport default {\n  name: 'App',\n  components: { AddFormVue, TodoList },\n\n  setup() {\n    const toggle = ref(false);\n    const todoArr = ref([]);\n    const todoStyle = {\n      textDecoration: 'line-through',\n      color: 'gray',\n    };\n    const fnDelete = function (index) {\n      /* 여기에 인덱스 쓸거니까 넣어줘야함 */\n      todoArr.value.splice(index, 1); /* 리액트는 새로운 배열로 교체를 해줘야하는데, 완전히 다른사람이되어야 갱신이됨. 하지만 여기는 밥먹고와도 갱신*/\n    };\n\n    const fnToggle = function () {\n      toggle.value = !toggle.value;\n    };\n\n    const fnAddTodo = function (sendEmit) {\n      colsole.log(sendEmit);\n    };\n\n    return {\n      todoArr,\n      toggle,\n      fnToggle,\n      todoStyle,\n      fnDelete,\n      fnAddTodo,\n    };\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":"AAeA;AACA;AACA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,UAAS,MAAO,0BAA0B;AACjD,OAAOC,QAAO,MAAO,2BAA2B;AAEhD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IAAEH,UAAU;IAAEC;EAAS,CAAC;EAEpCG,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIN,GAAG,CAAC,KAAK,CAAC;IACzB,MAAMO,OAAM,GAAIP,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMQ,SAAQ,GAAI;MAChBC,cAAc,EAAE,cAAc;MAC9BC,KAAK,EAAE;IACT,CAAC;IACD,MAAMC,QAAO,GAAI,SAAAA,CAAUC,KAAK,EAAE;MAChC;MACAL,OAAO,CAACM,KAAK,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,EAAE;IAClC,CAAC;;IAED,MAAMG,QAAO,GAAI,SAAAA,CAAA,EAAY;MAC3BT,MAAM,CAACO,KAAI,GAAI,CAACP,MAAM,CAACO,KAAK;IAC9B,CAAC;IAED,MAAMG,SAAQ,GAAI,SAAAA,CAAUC,QAAQ,EAAE;MACpCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC;IAED,OAAO;MACLV,OAAO;MACPD,MAAM;MACNS,QAAQ;MACRP,SAAS;MACTG,QAAQ;MACRK;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}