{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"To-do List\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", null, \"click\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 2\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = [\"id\", \"onUpdate:modelValue\"];\nconst _hoisted_8 = [\"for\"];\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, $setup.toggle ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"true\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"false\")), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.fnToggle && $setup.fnToggle(...args))\n  }, \"toggle\"), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $setup.fnSubmitHandler && $setup.fnSubmitHandler(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.todo = $event),\n    placeholder: \"type new todo-list\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.todo]]), _hoisted_4], 32 /* HYDRATE_EVENTS */), $setup.isErr ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"Error\")) : _createCommentVNode(\"v-if\", true), _hoisted_6, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.todoArr, (v, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: v.id\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      id: v.id,\n      \"onUpdate:modelValue\": $event => v.completed = $event,\n      type: \"checkbox\"\n    }, null, 8 /* PROPS */, _hoisted_7), [[_vModelCheckbox, v.completed]]), _createCommentVNode(\" v-model에 아래 트루폴스에따라 체크박스가 달라짐 \"), _createElementVNode(\"label\", {\n      for: v.id,\n      style: _normalizeStyle(v.completed ? $setup.todoStyle : ''),\n      class: _normalizeClass(v.completed ? 'disable' : '')\n    }, [_createCommentVNode(\" 포랑 아이디 맞춰주면 글자 클릭해도 체크박스체크가능 \"), _createCommentVNode(\" 여기서 :style=\\\"v.completed ? todoStyle : {}\\\" 이것도 가능\"), _createCommentVNode(\" :class=\\\"{ disable: v.completed }\\\" \"), _createTextVNode(\" \" + _toDisplayString(v.subject), 1 /* TEXT */)], 14 /* CLASS, STYLE, PROPS */, _hoisted_8), _createElementVNode(\"button\", {\n      onClick: $event => $setup.fnDelete(index)\n    }, \"delete\", 8 /* PROPS */, _hoisted_9)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","$setup","toggle","_createElementBlock","_hoisted_2","_hoisted_3","onClick","_cache","args","fnToggle","onSubmit","_withModifiers","fnSubmitHandler","type","todo","$event","placeholder","_hoisted_4","isErr","_hoisted_5","_hoisted_6","_Fragment","_renderList","todoArr","v","index","key","id","completed","_createCommentVNode","for","style","_normalizeStyle","todoStyle","class","_normalizeClass","_toDisplayString","subject","fnDelete","_hoisted_9"],"sources":["C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\App.vue"],"sourcesContent":["<template>\n  <h2>To-do List</h2>\n  <span v-if=\"toggle\">true</span>\n  <span v-else>false</span>\n  <button @click=\"fnToggle\">toggle</button>\n  <form @submit.prevent=\"fnSubmitHandler\">\n    <input\n      type=\"text\"\n      v-model=\"todo\"\n      placeholder=\"type new todo-list\"\n    />\n    <button>click</button>\n  </form>\n  <p v-if=\"isErr\">Error</p>\n  <hr />\n  <ul>\n    <li\n      v-for=\"(v, index) in todoArr\"\n      :key=\"v.id\"\n    >\n      <input\n        :id=\"v.id\"\n        v-model=\"v.completed\"\n        type=\"checkbox\"\n      /><!-- v-model에 아래 트루폴스에따라 체크박스가 달라짐 -->\n      <label\n        :for=\"v.id\"\n        :style=\"v.completed ? todoStyle : ''\"\n        :class=\"v.completed ? 'disable' : ''\"\n        ><!-- 포랑 아이디 맞춰주면 글자 클릭해도 체크박스체크가능 -->\n        <!-- 여기서 :style=\"v.completed ? todoStyle : {}\" 이것도 가능-->\n        <!-- :class=\"{ disable: v.completed }\" -->\n        {{ v.subject }}</label\n      >\n      <button @click=\"fnDelete(index)\">delete</button>\n    </li>\n  </ul>\n</template>\n\n<script>\n/* eslint-disable */\n//워닝이 너무 많이 뜰때 사용가능함!\nimport { ref } from 'vue';\n\nexport default {\n  name: 'App',\n\n  setup() {\n    const toggle = ref(false);\n    const isErr = ref(false);\n    const todo = ref('');\n    const todoArr = ref([]);\n    const todoStyle = {\n      textDecoration: 'line-through',\n      color: 'gray',\n    };\n    const fnDelete = function () {};\n\n    const fnSubmitHandler = function () {\n      // e.preventDefault(); 위에서 .prevent로 모디파이어로 대체 사용 가능함\n      isErr.value = !todo.value && true;\n      if (isErr.value) return false;\n      // isErr.value = (!todo.value)||false;\n      todoArr.value.push({\n        id: Date.now(),\n        subject: todo.value,\n        completed: false,\n      });\n      todo.value = '';\n    };\n\n    const fnToggle = function () {\n      toggle.value = !toggle.value;\n    };\n    return {\n      todo,\n      fnSubmitHandler,\n      todoArr,\n      toggle,\n      fnToggle,\n      isErr,\n      todoStyle,\n      fnDelete,\n    };\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";gCACEA,mBAAA,CAAmB,YAAf,YAAU;;;;;;;gCAUZA,mBAAA,CAAsB,gBAAd,OAAK;;;;gCAGfA,mBAAA,CAAM;;;;;6DAbNC,UAAmB,EACPC,MAAA,CAAAC,MAAM,I,cAAlBC,mBAAA,CAA+B,QAAAC,UAAA,EAAX,MAAI,M,cACxBD,mBAAA,CAAyB,QAAAE,UAAA,EAAZ,OAAK,IAClBN,mBAAA,CAAyC;IAAhCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAQ,QAAA,IAAAR,MAAA,CAAAQ,QAAA,IAAAD,IAAA,CAAQ;KAAE,QAAM,GAChCT,mBAAA,CAOO;IAPAW,QAAM,EAAAH,MAAA,QAAAA,MAAA,MAAAI,cAAA,KAAAH,IAAA,KAAUP,MAAA,CAAAW,eAAA,IAAAX,MAAA,CAAAW,eAAA,IAAAJ,IAAA,CAAe;sBACpCT,mBAAA,CAIE;IAHAc,IAAI,EAAC,MAAM;+DACFZ,MAAA,CAAAa,IAAI,GAAAC,MAAA;IACbC,WAAW,EAAC;iDADHf,MAAA,CAAAa,IAAI,E,GAGfG,UAAsB,C,4BAEfhB,MAAA,CAAAiB,KAAK,I,cAAdf,mBAAA,CAAyB,KAAAgB,UAAA,EAAT,OAAK,K,mCACrBC,UAAM,EACNrB,mBAAA,CAqBK,c,kBApBHI,mBAAA,CAmBKkB,SAAA,QAAAC,WAAA,CAlBkBrB,MAAA,CAAAsB,OAAO,GAApBC,CAAC,EAAEC,KAAK;yBADlBtB,mBAAA,CAmBK;MAjBFuB,GAAG,EAAEF,CAAC,CAACG;wBAER5B,mBAAA,CAIE;MAHC4B,EAAE,EAAEH,CAAC,CAACG,EAAE;uCACAH,CAAC,CAACI,SAAS,GAAAb,MAAA;MACpBF,IAAI,EAAC;4DADIW,CAAC,CAACI,SAAS,E,GAEpBC,mBAAA,mCAAsC,EACxC9B,mBAAA,CAQC;MAPE+B,GAAG,EAAEN,CAAC,CAACG,EAAE;MACTI,KAAK,EAAAC,eAAA,CAAER,CAAC,CAACI,SAAS,GAAG3B,MAAA,CAAAgC,SAAS;MAC9BC,KAAK,EAAAC,eAAA,CAAEX,CAAC,CAACI,SAAS;QAClBC,mBAAA,kCAAqC,EACtCA,mBAAA,uDAAwD,EACxDA,mBAAA,yCAA0C,E,iBAAA,GAC1C,GAAAO,gBAAA,CAAGZ,CAAC,CAACa,OAAO,iB,6CAEdtC,mBAAA,CAAgD;MAAvCO,OAAK,EAAAS,MAAA,IAAEd,MAAA,CAAAqC,QAAQ,CAACb,KAAK;OAAG,QAAM,iBAAAc,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}