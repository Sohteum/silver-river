{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"To-do List\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AddFormVue = _resolveComponent(\"AddFormVue\");\n  const _component_TodoList = _resolveComponent(\"TodoList\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, $setup.toggle ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"true\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"false\")), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.fnToggle && $setup.fnToggle(...args))\n  }, \"toggle\"), _createVNode(_component_AddFormVue, {\n    onAddTodo: _ctx.sendEmit\n  }, null, 8 /* PROPS */, [\"onAddTodo\"]), _createCommentVNode(\" 자식한테받았을때 \"), _createVNode(_component_TodoList, {\n    onEmitIdx: $setup.todoArr\n  }, null, 8 /* PROPS */, [\"onEmitIdx\"]), _createCommentVNode(\" 보낼때 \"), !$setup.todoArr.length ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"등록된 일정이 존재하지 않습니다.\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"  v-if=\\\"\\\"이런애들. :id 이런애들 발견하면 무조건 스크립트 문법임 \"), _createCommentVNode(\" \\\"!todoArr.length\\\"0이라면, 0은 false니까 앞에 느낌표만 하나 붙이면 됨 \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","$setup","toggle","_createElementBlock","_hoisted_2","_hoisted_3","onClick","_cache","args","fnToggle","_createVNode","_component_AddFormVue","onAddTodo","_ctx","sendEmit","_createCommentVNode","_component_TodoList","onEmitIdx","todoArr","length","_hoisted_4"],"sources":["C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\App.vue"],"sourcesContent":["<template>\n  <h2>To-do List</h2>\n  <span v-if=\"toggle\">true</span>\n  <span v-else>false</span>\n  <button @click=\"fnToggle\">toggle</button>\n\n  <AddFormVue @add-todo=\"sendEmit\" /><!-- 자식한테받았을때 -->\n  <TodoList @emit-idx=\"todoArr\" /><!-- 보낼때 -->\n\n  <p v-if=\"!todoArr.length\">등록된 일정이 존재하지 않습니다.</p>\n  <!--  v-if=\"\"이런애들. :id 이런애들 발견하면 무조건 스크립트 문법임 -->\n  <!-- \"!todoArr.length\"0이라면, 0은 false니까 앞에 느낌표만 하나 붙이면 됨 -->\n</template>\n\n<script>\n/* eslint-disable */\n//워닝이 너무 많이 뜰때 사용가능함!\nimport { ref } from 'vue';\nimport AddFormVue from './components/AddForm.vue';\nimport TodoList from './components/TodoList.vue';\n\nexport default {\n  name: 'App',\n  components: { AddFormVue, TodoList },\n\n  setup() {\n    const toggle = ref(false);\n    const todoArr = ref([]);\n    const todoStyle = {\n      textDecoration: 'line-through',\n      color: 'gray',\n    };\n    const fnDelete = function (index) {\n      /* 여기에 인덱스 쓸거니까 넣어줘야함 */\n      todoArr.value.splice(index, 1); /* 리액트는 새로운 배열로 교체를 해줘야하는데, 완전히 다른사람이되어야 갱신이됨. 하지만 여기는 밥먹고와도 갱신*/\n    };\n\n    const fnToggle = function () {\n      toggle.value = !toggle.value;\n    };\n\n    const fnAddTodo = function (sendEmit) {};\n\n    return {\n      todoArr,\n      toggle,\n      fnToggle,\n      todoStyle,\n      fnDelete,\n      fnAddTodo,\n    };\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";gCACEA,mBAAA,CAAmB,YAAf,YAAU;;;;;;;;;;;;;6DAAdC,UAAmB,EACPC,MAAA,CAAAC,MAAM,I,cAAlBC,mBAAA,CAA+B,QAAAC,UAAA,EAAX,MAAI,M,cACxBD,mBAAA,CAAyB,QAAAE,UAAA,EAAZ,OAAK,IAClBN,mBAAA,CAAyC;IAAhCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAQ,QAAA,IAAAR,MAAA,CAAAQ,QAAA,IAAAD,IAAA,CAAQ;KAAE,QAAM,GAEhCE,YAAA,CAAmCC,qBAAA;IAAtBC,SAAQ,EAAEC,IAAA,CAAAC;EAAQ,wCAAIC,mBAAA,cAAiB,EACpDL,YAAA,CAAgCM,mBAAA;IAArBC,SAAQ,EAAEhB,MAAA,CAAAiB;EAAO,wCAAIH,mBAAA,SAAY,E,CAElCd,MAAA,CAAAiB,OAAO,CAACC,MAAM,I,cAAxBhB,mBAAA,CAAgD,KAAAiB,UAAA,EAAtB,oBAAkB,K,mCAC5CL,mBAAA,gDAAiD,EACjDA,mBAAA,0DAA2D,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}