[{"C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\main.js":"1","C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\App.vue":"2","C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\components\\AddForm.vue":"3","C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\components\\TodoList.vue":"4"},{"size":90,"mtime":1683350103843,"results":"5","hashOfConfig":"6"},{"size":1578,"mtime":1684572624013,"results":"7","hashOfConfig":"6"},{"size":1240,"mtime":1684571097569,"results":"8","hashOfConfig":"6"},{"size":1164,"mtime":1684572626830,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"16gn6ab",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\main.js",[],[],"C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\App.vue",[],[],"C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\components\\AddForm.vue",[],"C:\\Users\\sosomi\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\todolist\\src\\components\\TodoList.vue",["21"],"<template>\r\n  <ul>\r\n    <li\r\n      v-for=\"(v, index) in todoArr\"\r\n      :key=\"v.id\"\r\n    >\r\n      <input\r\n        :id=\"v.id\"\r\n        v-model=\"v.completed\"\r\n        type=\"checkbox\"\r\n      /><!-- v-model에 아래 트루폴스에따라 체크박스가 달라짐 -->\r\n      <label\r\n        :for=\"v.id\"\r\n        :style=\"v.completed ? todoStyle : ''\"\r\n        :class=\"v.completed ? 'disable' : ''\"\r\n        ><!-- 포랑 아이디 맞춰주면 글자 클릭해도 체크박스체크가능 -->\r\n        <!-- 여기서 :style=\"v.completed ? todoStyle : {}\" 이것도 가능-->\r\n        <!-- :class=\"{ disable: v.completed }\" -->\r\n        {{ v.subject }}</label\r\n      >\r\n      <button @click=\"fnDelete(index)\">delete</button>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nimport { isContext } from 'vm';\r\n\r\nexport default {\r\n  props: {\r\n    todoArr: {\r\n      type: Array,\r\n      required: true,\r\n      // props: ['todoArr'],\r\n    },\r\n    setup() {\r\n      const fnDelete = (index) => {\r\n        console.log(index);\r\n        isContext.emit('emit', index){\r\n\r\n        }\r\n      };\r\n      return {\r\n        fnDelete,\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n",{"ruleId":null,"fatal":true,"severity":2,"message":"22","line":39,"column":37},"Parsing error: Missing semicolon. (14:37)"]