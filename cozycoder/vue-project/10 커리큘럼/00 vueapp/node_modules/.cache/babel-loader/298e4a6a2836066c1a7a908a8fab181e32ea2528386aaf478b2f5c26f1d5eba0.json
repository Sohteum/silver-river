{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CompHeader = _resolveComponent(\"CompHeader\");\n  const _component_CompAddForm = _resolveComponent(\"CompAddForm\");\n  const _component_CompLi = _resolveComponent(\"CompLi\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_CompHeader), _createVNode(_component_CompAddForm, {\n    onEmitAddListHandler: $setup._setTodoArr\n  }, null, 8 /* PROPS */, [\"onEmitAddListHandler\"]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup._todoArr, (v, i) => {\n    return _openBlock(), _createBlock(_component_CompLi, {\n      key: v.id,\n      data: v,\n      idx: i,\n      fnCompleted: $setup._setTodoArrCompleted,\n      fnDeleteTodoArrList: $setup._setDeleteTodoArrList\n    }, null, 8 /* PROPS */, [\"data\", \"idx\", \"fnCompleted\", \"fnDeleteTodoArrList\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_1, _createTextVNode(\" \" + _toDisplayString($setup._todoArr), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createVNode","_component_CompHeader","_component_CompAddForm","onEmitAddListHandler","$setup","_setTodoArr","_createElementBlock","_Fragment","_renderList","_todoArr","v","i","_createBlock","_component_CompLi","key","id","data","idx","fnCompleted","_setTodoArrCompleted","fnDeleteTodoArrList","_setDeleteTodoArrList","_hoisted_1","_toDisplayString"],"sources":["C:\\Users\\thtwk\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\08-총정리_선생님\\src\\App.vue"],"sourcesContent":["<template>\r\n  <CompHeader />\r\n\r\n  <CompAddForm @emitAddListHandler=\"_setTodoArr\" />\r\n\r\n  <ul>\r\n    <CompLi \r\n      v-for=\"(v,i) in _todoArr\" \r\n      :key=\"v.id\" \r\n      :data=\"v\"  \r\n      :idx=\"i\"  \r\n      :fnCompleted=\"_setTodoArrCompleted\"\r\n      :fnDeleteTodoArrList=\"_setDeleteTodoArrList\"\r\n    />\r\n  </ul>\r\n\r\n\r\n  <hr>\r\n  {{ _todoArr }}\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport CompHeader from './components/CompHeader.vue'\r\nimport CompAddForm from './components/CompAddForm.vue'\r\nimport CompLi from './components/CompLi.vue'\r\n\r\nexport default {\r\n  components: { CompHeader, CompAddForm, CompLi },\r\n\r\n  setup() {\r\n    const _todoArr = ref([])\r\n    const _setTodoArr = (emitData) => {\r\n      _todoArr.value.push(emitData)\r\n    }\r\n\r\n    const _setTodoArrCompleted = (idx, boolean) => {\r\n      _todoArr.value[idx].completed = boolean\r\n    }\r\n\r\n    const _setDeleteTodoArrList = (i) => {\r\n      _todoArr.value.splice(i,1)\r\n    }\r\n    \r\n    return {\r\n      _todoArr,\r\n      _setTodoArr,_setTodoArrCompleted,_setDeleteTodoArrList\r\n    }\r\n  }//setup\r\n}\r\n</script>\r\n<style>\r\n@import './css/style.css';\r\n</style>\r\n"],"mappings":";gCAiBEA,mBAAA,CAAI;;;;;;6DAhBJC,YAAA,CAAcC,qBAAA,GAEdD,YAAA,CAAiDE,sBAAA;IAAnCC,oBAAkB,EAAEC,MAAA,CAAAC;EAAW,mDAE7CN,mBAAA,CASK,c,kBARHO,mBAAA,CAOEC,SAAA,QAAAC,WAAA,CANgBJ,MAAA,CAAAK,QAAQ,GAAhBC,CAAC,EAACC,CAAC;yBADbC,YAAA,CAOEC,iBAAA;MALCC,GAAG,EAAEJ,CAAC,CAACK,EAAE;MACTC,IAAI,EAAEN,CAAC;MACPO,GAAG,EAAEN,CAAC;MACNO,WAAW,EAAEd,MAAA,CAAAe,oBAAoB;MACjCC,mBAAmB,EAAEhB,MAAA,CAAAiB;;oCAK1BC,UAAI,E,iBAAA,GACJ,GAAAC,gBAAA,CAAGnB,MAAA,CAAAK,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}