{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"list\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.keyword = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.keyword]])]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.outputArr, v => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: v.id\n    }, _toDisplayString(v.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_hoisted_2","$setup","keyword","$event","type","_createElementBlock","_Fragment","_renderList","outputArr","v","key","id","title"],"sources":["C:\\Users\\thtwk\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\10 커리큘럼\\00 vueapp\\src\\components\\CompLi.vue"],"sourcesContent":["<template lang=\"\">\r\n  <hr>\r\n  <div>\r\n    <h2>list</h2>\r\n   <p> <input v-model=\"keyword\" type=\"text\"></p>\r\n    <ul>\r\n      <li v-for=\"v in outputArr\" :key=\"v.id\">{{v.title}}</li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { computed, ref } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const arr = ref([\r\n      { id: 1, title: 'c2' },\r\n      { id: 2, title: 'c1' },\r\n      { id: 3, title: 'b2' },\r\n      { id: 4, title: 'b1' },\r\n      { id: 5, title: 'a2' },\r\n      { id: 6, title: 'a1' },\r\n    ])\r\n    const keyword = ref('')\r\n    const outputArr = computed(() => {\r\n      return arr.value.filter((v) => v.title.includes(keyword)) //제목.포함(검색어)\r\n    })\r\n    return {\r\n      arr, outputArr, keyword\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"\">\r\n  \r\n</style>"],"mappings":";gCACEA,mBAAA,CAAI;gCAEFA,mBAAA,CAAa,YAAT,MAAI;;;6DAFVC,UAAI,EACJD,mBAAA,CAMM,cALJE,UAAa,EACdF,mBAAA,CAA6C,Y,gBAAzCA,mBAAA,CAAqC;+DAArBG,MAAA,CAAAC,OAAO,GAAAC,MAAA;IAAEC,IAAI,EAAC;iDAAdH,MAAA,CAAAC,OAAO,E,KAC1BJ,mBAAA,CAEK,c,kBADHO,mBAAA,CAAuDC,SAAA,QAAAC,WAAA,CAAvCN,MAAA,CAAAO,SAAS,EAAdC,CAAC;yBAAZJ,mBAAA,CAAuD;MAA3BK,GAAG,EAAED,CAAC,CAACE;wBAAMF,CAAC,CAACG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}