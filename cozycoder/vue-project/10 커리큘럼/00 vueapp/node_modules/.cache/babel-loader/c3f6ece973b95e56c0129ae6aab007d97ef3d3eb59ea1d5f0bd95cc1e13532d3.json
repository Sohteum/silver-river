{"ast":null,"code":"import { computed, ref } from 'vue';\nexport default {\n  setup() {\n    const num1 = ref(0);\n    const num2 = ref(0);\n\n    /*  ref를 이용한 방식\r\n    const sum = ref(0)\r\n     const fnCalc = () => {\r\n       sum.value = num1.value + num2.value\r\n     } */\n\n    //computed를 이용한 방식\n    const sum = computed(() => num1.value + num2.value //반드시 ref이용한거 리턴\n    ); //함수를 함수로 쌀수있는 하이오더펑션방식\n    const sub = computed(() => num1.value - num2.value);\n    const multi = computed(() => num1.value * num2.value);\n    const div = computed(() => num1.value / num2.value);\n    return {\n      num1,\n      num2,\n      sum,\n      sub,\n      multi,\n      div\n      /* fnCalc\r\n      , sum */\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","setup","num1","num2","sum","value","sub","multi","div"],"sources":["C:\\Users\\thtwk\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\10 커리큘럼\\00 vueapp\\src\\components\\CompCalc.vue"],"sourcesContent":["<template lang=\"\">\r\n  <div>\r\n    <h2>Calc</h2>\r\n    <!--  ref를 이용한 변경방식\r\n    <input @input=\"fnCalc\" comp v-model=\"num1\" type=\"number\" min=\"0\" max=\"9\">\r\n    &nbsp;\r\n    <input @input=\"fnCalc\" comp v-model=\"num2\" type=\"number\" min=\"0\" max=\"9\">\r\n  -->\r\n\r\n  <!-- computed를 이용한 변경방식 -->\r\n  <input   comp v-model=\"num1\" type=\"number\" min=\"0\" max=\"9\">\r\n  &nbsp;\r\n  <input   comp v-model=\"num2\" type=\"number\" min=\"0\" max=\"9\">\r\n\r\n\r\n    <P>\r\n      더하기 : {{sum}},<br>\r\n      빼기: {{sub}},<br>\r\n      곱하기: {{multi}},<br>\r\n      나누기: {{div}},<br>\r\n    </P>\r\n\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport { computed, ref } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const num1 = ref(0)\r\n    const num2 = ref(0)\r\n\r\n    /*  ref를 이용한 방식\r\n    const sum = ref(0)\r\n     const fnCalc = () => {\r\n       sum.value = num1.value + num2.value\r\n     } */\r\n\r\n    //computed를 이용한 방식\r\n    const sum = computed(() => num1.value + num2.value//반드시 ref이용한거 리턴\r\n    ) //함수를 함수로 쌀수있는 하이오더펑션방식\r\n    const sub = computed(() => num1.value - num2.value)\r\n    const multi = computed(() => num1.value * num2.value)\r\n    const div = computed(() => num1.value / num2.value)\r\n\r\n\r\n    return {\r\n      num1, num2, sum, sub, multi, div\r\n      /* fnCalc\r\n      , sum */\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n<style lang=\"\">\r\n  \r\n</style>"],"mappings":"AA0BA,SAASA,QAAQ,EAAEC,GAAE,QAAS,KAAK;AAEnC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIF,GAAG,CAAC,CAAC;IAClB,MAAMG,IAAG,GAAIH,GAAG,CAAC,CAAC;;IAElB;;;;;;IAMA;IACA,MAAMI,GAAE,GAAIL,QAAQ,CAAC,MAAMG,IAAI,CAACG,KAAI,GAAIF,IAAI,CAACE,KAAK;IAClD,GAAE;IACF,MAAMC,GAAE,GAAIP,QAAQ,CAAC,MAAMG,IAAI,CAACG,KAAI,GAAIF,IAAI,CAACE,KAAK;IAClD,MAAME,KAAI,GAAIR,QAAQ,CAAC,MAAMG,IAAI,CAACG,KAAI,GAAIF,IAAI,CAACE,KAAK;IACpD,MAAMG,GAAE,GAAIT,QAAQ,CAAC,MAAMG,IAAI,CAACG,KAAI,GAAIF,IAAI,CAACE,KAAK;IAGlD,OAAO;MACLH,IAAI;MAAEC,IAAI;MAAEC,GAAG;MAAEE,GAAG;MAAEC,KAAK;MAAEC;MAC7B;;IAEF;EACF;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}