{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"watch\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"watch2\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"p\", null, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(5, i => {\n    return _createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = $event => $setup.num = parseInt($event.target.value)),\n      key: i,\n      value: i\n    }, _toDisplayString(i), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 64 /* STABLE_FRAGMENT */))]), _createElementVNode(\"p\", null, \" num:\" + _toDisplayString($setup.num) + \", 결과 :\" + _toDisplayString($setup.result), 1 /* TEXT */)]), _hoisted_3, _hoisted_4, _hoisted_5, _createElementVNode(\"p\", null, _toDisplayString($setup.output), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_renderList","i","onClick","_cache","$event","$setup","num","parseInt","target","value","key","_hoisted_2","_toDisplayString","result","_hoisted_3","_hoisted_4","_hoisted_5","output"],"sources":["C:\\Users\\thtwk\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\10 커리큘럼\\00 vueapp\\src\\components\\CompWatch.vue"],"sourcesContent":["<template lang=\"\">\r\n  <div>\r\n    <h2>watch</h2>\r\n    <p>\r\n      <button @click=\"num = parseInt($event.target.value)\" v-for=\"i in 5\" :key=\"i\" :value=\"i\">{{i}}</button>\r\n    </p>\r\n    <p>\r\nnum:{{num}}, 결과 :{{result}}\r\n    </p>\r\n  </div>\r\n  <hr>\r\n  <h2>watch2</h2>\r\n  <hr>\r\n  <p>{{output}}</p>\r\n</template>\r\n<script>\r\nimport { ref, watch } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    /* ex1 */\r\n    const num = ref(1)\r\n    const result = ref('초기값')\r\n    watch(num, (current, prev) => {\r\n      result.value = (current > prev) ? '증가' : '감소'\r\n    }) //파라미터 두개를 받음. 하나는 값, 두번째는 함수 그러니까 이것도 하이오더펑션//같은값을 눌렀을때는 변화가 없으니까 찾을 수 없음\r\n    /* ex1 */\r\n    const output = ref('스크롤변화없음')\r\n    const scrY = ref(window.scrollY)\r\n    window.addEventListener('scroll', () => {\r\n      scrY.value = window.scrollY\r\n    })//addeventlistner도 어찌보면 하이오더 펑션\r\nwatch(scrY, (c, p)=>{\r\noutput.value = (c>p)? '스크롤증가':'스크롤감소' \r\n})\r\n    return {\r\n      num, result, output\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"\">\r\n  \r\n</style>"],"mappings":";gCAEIA,mBAAA,CAAc,YAAV,OAAK;;gCAQXA,mBAAA,CAAI;gCACJA,mBAAA,CAAe,YAAX,QAAM;gCACVA,mBAAA,CAAI;;;6DAXJA,mBAAA,CAQM,cAPJC,UAAc,EACdD,mBAAA,CAEI,a,cADFE,mBAAA,CAAsGC,SAAA,QAAAC,WAAA,CAArC,CAAC,EAANC,CAAC;WAA7DL,mBAAA,CAAsG;MAA7FM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,GAAG,GAAGC,QAAQ,CAACH,MAAM,CAACI,MAAM,CAACC,KAAK;MAAmBC,GAAG,EAAET,CAAC;MAAGQ,KAAK,EAAER;wBAAKA,CAAC,wBAAAU,UAAA;oCAE7Ff,mBAAA,CAEI,WAFD,OACH,GAAAgB,gBAAA,CAAEP,MAAA,CAAAC,GAAG,IAAE,QAAM,GAAAM,gBAAA,CAAEP,MAAA,CAAAQ,MAAM,iB,GAGvBC,UAAI,EACJC,UAAe,EACfC,UAAI,EACJpB,mBAAA,CAAiB,WAAAgB,gBAAA,CAAZP,MAAA,CAAAY,MAAM,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}