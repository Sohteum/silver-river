{"ast":null,"code":"import CompOne from '@/components/CompOne.vue';\nimport CompTwo from '@/components/CompTwo.vue';\nexport default {\n  name: 'App',\n  components: {\n    CompOne,\n    CompTwo\n  }\n};","map":{"version":3,"names":["CompOne","CompTwo","name","components"],"sources":["C:\\Users\\thtwk\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\10 커리큘럼\\00 vueapp\\src\\App.vue"],"sourcesContent":["<template>\r\n\r\n  <!-- \r\n    parsing은 부모부터 시작이 됨.위에서 아래로//변수나 함수를 읽어내리는거\r\n    끝나면 돔을 만든다. 그건 자식순. 돔의 구축은 자식으로 부모순으로 만들어짐//돔구축하는거\r\n    그개념과 같은 개념임.\r\n\r\n    생명주기 : \r\n    - parsing : 부모>자식\r\n    - dom구축 : 자식>부모\r\n\r\n    react hooks에서는 세가지로 \r\n    useEffect(()=>{},[])  //돔 구축이 끝난 딱 한번\r\n\r\n    in vue,\r\n    onMounted() : useEffect(()=>{},[])\r\n    onUpdated() : useEffect(()=>{},[num]) num이 바뀔때마다, 여기는 하나만 바뀔때마다업뎃이된다구??????????\r\n\r\n\r\n    onUnmounted() :  죽을때(사라질때) : useEffect(()=>{return(()=>{여기 안에 들어오는게 죽을때할일})},[])\r\n   -->\r\n  <CompOne />\r\n  <hr>\r\n  <CompTwo />\r\n</template>\r\n\r\n<script>\r\nimport CompOne from '@/components/CompOne.vue'\r\nimport CompTwo from '@/components/CompTwo.vue'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: { CompOne, CompTwo }\r\n}\r\n</script>\r\n"],"mappings":"AA2BA,OAAOA,OAAM,MAAO,0BAAyB;AAC7C,OAAOC,OAAM,MAAO,0BAAyB;AAE7C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IAAEH,OAAO;IAAEC;EAAQ;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}