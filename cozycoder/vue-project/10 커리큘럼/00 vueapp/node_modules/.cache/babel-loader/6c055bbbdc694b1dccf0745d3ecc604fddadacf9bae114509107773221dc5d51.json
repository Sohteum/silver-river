{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CompWatch = _resolveComponent(\"CompWatch\");\n  const _component_CompWatchEffect = _resolveComponent(\"CompWatchEffect\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(\" app \"), _createCommentVNode(\"\\r\\n     computed:state가 변하면 같이 변해야 하는 변수를 설정\\r\\n  watch: state(1개)가 변화를 감지 했을 때 할일, 이전값과 이후값. 즉 비교값을 알아낼 수 있음\\r\\n  watchEffect : state(여러개)가 변화를 감지 했을 때 할일(유즈이펙트처럼 뭐 하나 바뀔때마다 할일, 그대신 이전이후는 못찾음)\\r\\n  \"), _createVNode(_component_CompWatch), _createVNode(_component_CompWatchEffect)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode","_createVNode","_component_CompWatch","_component_CompWatchEffect"],"sources":["C:\\Users\\thtwk\\OneDrive\\문서\\GitHub\\silver-river\\cozycoder\\vue-project\\10 커리큘럼\\00 vueapp\\src\\App.vue"],"sourcesContent":["<template>\r\n  app\r\n  <!--\r\n     computed:state가 변하면 같이 변해야 하는 변수를 설정\r\n  watch: state(1개)가 변화를 감지 했을 때 할일, 이전값과 이후값. 즉 비교값을 알아낼 수 있음\r\n  watchEffect : state(여러개)가 변화를 감지 했을 때 할일(유즈이펙트처럼 뭐 하나 바뀔때마다 할일, 그대신 이전이후는 못찾음)\r\n  -->\r\n  <CompWatch />\r\n  <CompWatchEffect />\r\n</template>\r\n\r\n<script>\r\nimport CompWatch from '@/components/CompWatch.vue';\r\nimport CompWatchEffect from '@/components/CompWatchEffect.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: { CompWatch, CompWatchEffect }\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n<!--  -->"],"mappings":";;;;qFAEE,GAAAA,mBAAA,4MAIG,EACHC,YAAA,CAAaC,oBAAA,GACbD,YAAA,CAAmBE,0BAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}